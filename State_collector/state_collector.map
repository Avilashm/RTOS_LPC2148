ARM Linker, RVCT4.0 [Build 728] [Evaluation]

==============================================================================

Section Cross References

    main.o(.text) refers to spi.o(.text) for SPI1_SendByte
    main.o(.text) refers to tasks.o(.text) for vTaskDelay
    main.o(.text) refers to adc.o(.text) for AD0_Conversion
    main.o(.text) refers to pwm.o(.text) for UpdateVelocity
    main.o(.text) refers to motion_control.o(.text) for Forward
    main.o(.text) refers to lcd.o(.text) for Init_LCD_Pin
    main.o(.text) refers to main.o(.data) for Temp
    main.o(.text) refers to main.o(.bss) for sen_dat
    queue.o(.text) refers to port.o(.text) for vPortEnterCritical
    queue.o(.text) refers to tasks.o(.text) for xTaskRemoveFromEventList
    queue.o(.text) refers to portasm.o(PORT_ASM) for vPortYield
    queue.o(.text) refers to list.o(.text) for vListInitialise
    queue.o(.text) refers to heap_2.o(.text) for pvPortMalloc
    queue.o(.text) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    tasks.o(.text) refers to list.o(.text) for vListInitialise
    tasks.o(.text) refers to port.o(.text) for vPortEnterCritical
    tasks.o(.text) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(.text) refers to heap_2.o(.text) for pvPortMalloc
    tasks.o(.text) refers to tasks.o(.bss) for .bss
    tasks.o(.text) refers to tasks.o(.data) for .data
    heap_2.o(.text) refers to tasks.o(.text) for vTaskSuspendAll
    heap_2.o(.text) refers to heap_2.o(.bss) for .bss
    heap_2.o(.text) refers to heap_2.o(.data) for .data
    port.o(.text) refers to portasm.o(PORT_ASM) for vPortStartFirstTask
    port.o(.text) refers to port.o(.data) for ulCriticalNesting
    portasm.o(PORT_ASM) refers to tasks.o(.data) for pxCurrentTCB
    portasm.o(PORT_ASM) refers to port.o(.data) for ulCriticalNesting
    portasm.o(PORT_ASM) refers to tasks.o(.text) for vTaskSwitchContext
    motion_control.o(.text) refers to fflt_noclz.o(x$fpl$ffltu) for __aeabi_ui2f
    motion_control.o(.text) refers to f2d.o(x$fpl$f2d) for __aeabi_f2d
    motion_control.o(.text) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    motion_control.o(.text) refers to d2f.o(x$fpl$d2f) for __aeabi_d2f
    motion_control.o(.text) refers to ffixu.o(x$fpl$ffixu) for __aeabi_f2uiz
    motion_control.o(.text) refers to dflt_noclz.o(x$fpl$dfltu) for __aeabi_ui2d
    motion_control.o(.text) refers to motion_control.o(.data) for Left_Shaft_Count
    lcd.o(.text) refers to aeabi_sdiv.o(.text_udiv) for __aeabi_uidivmod
    startup.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(RESET) refers to portasm.o(PORT_ASM) for vPortYieldProcessor
    startup.o(RESET) refers to startup.o(STACK) for Stack_Top
    startup.o(RESET) refers to __main.o(!!!main) for __main
    startup.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(.text) refers to startup.o(HEAP) for Heap_Mem
    startup.o(.text) refers to startup.o(STACK) for Stack_Mem
    adc.o(.text) refers to lcd.o(.text) for DelaymSec
    adc.o(.text) refers to dflt_noclz.o(x$fpl$dfltu) for __aeabi_ui2d
    adc.o(.text) refers to pow.o(i.pow) for pow
    adc.o(.text) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    adc.o(.text) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    adc.o(.text) refers to dfix.o(x$fpl$dfix) for __aeabi_d2iz
    adc.o(.text) refers to fflt_noclz.o(x$fpl$fflt) for __aeabi_i2f
    adc.o(.text) refers to ffix.o(x$fpl$ffix) for __aeabi_f2iz
    adc.o(.text) refers to fflt_noclz.o(x$fpl$ffltu) for __aeabi_ui2f
    adc.o(.text) refers to f2d.o(x$fpl$f2d) for __aeabi_f2d
    adc.o(.text) refers to daddsub_noclz.o(x$fpl$dadd) for __aeabi_dadd
    adc.o(.text) refers to d2f.o(x$fpl$d2f) for __aeabi_d2f
    adc.o(.text) refers to ffixu.o(x$fpl$ffixu) for __aeabi_f2uiz
    rt_memcpy.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_sdiv.o(.text_udiv) refers to aeabi_sdiv.o(.text) for __arm_div4
    aeabi_sdiv_div0.o(.text_udiv) refers to aeabi_sdiv_div0.o(.text) for __arm_div4
    __main.o(!!!main) refers to rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    d2f.o(x$fpl$d2f) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    d2f.o(x$fpl$d2f) refers (Special) to funder.o(x$fpl$funder) for __funder
    d2f.o(x$fpl$d2f) refers to dcheck1.o(x$fpl$dcheck1) for __fpl_dcheck_NaN1
    daddsub_noclz.o(x$fpl$dadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_noclz.o(x$fpl$dadd) refers (Special) to dunder.o(x$fpl$dunder) for __dunder
    daddsub_noclz.o(x$fpl$dadd) refers to daddsub_noclz.o(x$fpl$dsub) for _dsub1
    daddsub_noclz.o(x$fpl$dadd) refers to dcheck.o(x$fpl$dcheck) for __fpl_dcheck_NaN2
    daddsub_noclz.o(x$fpl$drsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_noclz.o(x$fpl$drsb) refers (Special) to dunder.o(x$fpl$dunder) for __dunder
    daddsub_noclz.o(x$fpl$drsb) refers to daddsub_noclz.o(x$fpl$dadd) for _dadd1
    daddsub_noclz.o(x$fpl$drsb) refers to daddsub_noclz.o(x$fpl$dsub) for _dsub1
    daddsub_noclz.o(x$fpl$dsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    daddsub_noclz.o(x$fpl$dsub) refers (Special) to dunder.o(x$fpl$dunder) for __dunder
    daddsub_noclz.o(x$fpl$dsub) refers to daddsub_noclz.o(x$fpl$dadd) for _dadd1
    daddsub_noclz.o(x$fpl$dsub) refers to dcheck.o(x$fpl$dcheck) for __fpl_dcheck_NaN2
    ddiv.o(x$fpl$drdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$drdiv) refers (Special) to dunder.o(x$fpl$dunder) for __dunder
    ddiv.o(x$fpl$drdiv) refers to ddiv.o(x$fpl$ddiv) for ddiv_entry
    ddiv.o(x$fpl$ddiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$ddiv) refers (Special) to dunder.o(x$fpl$dunder) for __dunder
    ddiv.o(x$fpl$ddiv) refers to dcheck.o(x$fpl$dcheck) for __fpl_dcheck_NaN2
    dfix.o(x$fpl$dfix) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfix.o(x$fpl$dfix) refers to dcheck1.o(x$fpl$dcheck1) for __fpl_dcheck_NaN1
    dfix.o(x$fpl$dfixr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfix.o(x$fpl$dfixr) refers to dcheck1.o(x$fpl$dcheck1) for __fpl_dcheck_NaN1
    dflt_noclz.o(x$fpl$dfltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_noclz.o(x$fpl$dfltu) refers to dflt_noclz.o(x$fpl$dflt) for __dflt_normalise
    dflt_noclz.o(x$fpl$dflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers (Special) to dunder.o(x$fpl$dunder) for __dunder
    dmul.o(x$fpl$dmul) refers to dcheck.o(x$fpl$dcheck) for __fpl_dcheck_NaN2
    f2d.o(x$fpl$f2d) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    f2d.o(x$fpl$f2d) refers (Special) to dflt_noclz.o(x$fpl$dflt) for __dflt_normalise
    f2d.o(x$fpl$f2d) refers to fcheck1.o(x$fpl$fcheck1) for __fpl_fcheck_NaN1
    ffix.o(x$fpl$ffix) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffix.o(x$fpl$ffix) refers to fcheck1.o(x$fpl$fcheck1) for __fpl_fcheck_NaN1
    ffix.o(x$fpl$ffixr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffix.o(x$fpl$ffixr) refers to fcheck1.o(x$fpl$fcheck1) for __fpl_fcheck_NaN1
    ffixu.o(x$fpl$ffixu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffixu.o(x$fpl$ffixu) refers to fcheck1.o(x$fpl$fcheck1) for __fpl_fcheck_NaN1
    ffixu.o(x$fpl$ffixur) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffixu.o(x$fpl$ffixur) refers to fcheck1.o(x$fpl$fcheck1) for __fpl_fcheck_NaN1
    fflt_noclz.o(x$fpl$ffltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflt_noclz.o(x$fpl$ffltu) refers to fflt_noclz.o(x$fpl$fflt) for __fflt_normalise
    fflt_noclz.o(x$fpl$fflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    pow.o(i.__softfp_pow) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    pow.o(i.__softfp_pow) refers to pow.o(i.pow) for pow
    pow.o(i.pow) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    pow.o(i.pow) refers to daddsub_noclz.o(x$fpl$dadd) for __aeabi_dadd
    pow.o(i.pow) refers to _rserrno.o(.text) for __set_errno
    pow.o(i.pow) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    pow.o(i.pow) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    pow.o(i.pow) refers to sqrt.o(i.sqrt) for sqrt
    pow.o(i.pow) refers to qnan.o(.constdata) for __mathlib_zero
    pow.o(i.pow) refers to dflt_noclz.o(x$fpl$dflt) for __aeabi_i2d
    pow.o(i.pow) refers to daddsub_noclz.o(x$fpl$dsub) for __aeabi_dsub
    pow.o(i.pow) refers to scalbn.o(x$fpl$scalbn) for scalbn
    pow.o(i.pow) refers to daddsub_noclz.o(x$fpl$drsb) for __aeabi_drsub
    pow.o(i.pow) refers to pow.o(.constdata) for .constdata
    pow.o(i.pow) refers to poly.o(i.__kernel_poly) for __kernel_poly
    pow.o(i.pow) refers to drleqf.o(x$fpl$drleqf) for __aeabi_cdrcmple
    pow.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    pow_x.o(i.____softfp_pow$c99) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    pow_x.o(i.____softfp_pow$c99) refers to pow_x.o(i.__pow$c99) for __pow$c99
    pow_x.o(i.__pow$c99) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    pow_x.o(i.__pow$c99) refers to daddsub_noclz.o(x$fpl$dadd) for __aeabi_dadd
    pow_x.o(i.__pow$c99) refers to _rserrno.o(.text) for __set_errno
    pow_x.o(i.__pow$c99) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    pow_x.o(i.__pow$c99) refers to scalbn.o(x$fpl$scalbn) for scalbn
    pow_x.o(i.__pow$c99) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    pow_x.o(i.__pow$c99) refers to sqrt.o(i.sqrt) for sqrt
    pow_x.o(i.__pow$c99) refers to qnan.o(.constdata) for __mathlib_zero
    pow_x.o(i.__pow$c99) refers to dunder.o(i.__mathlib_dbl_underflow) for __mathlib_dbl_underflow
    pow_x.o(i.__pow$c99) refers to daddsub_noclz.o(x$fpl$dsub) for __aeabi_dsub
    pow_x.o(i.__pow$c99) refers to daddsub_noclz.o(x$fpl$drsb) for __aeabi_drsub
    pow_x.o(i.__pow$c99) refers to pow_x.o(.constdata) for .constdata
    pow_x.o(i.__pow$c99) refers to poly.o(i.__kernel_poly) for __kernel_poly
    pow_x.o(i.__pow$c99) refers to dflt_noclz.o(x$fpl$dflt) for __aeabi_i2d
    pow_x.o(i.__pow$c99) refers to drleqf.o(x$fpl$drleqf) for __aeabi_cdrcmple
    pow_x.o(i.__pow$c99) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    pow_x.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    rtentry.o(.ARM.exidx) refers (Special) to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rtentry.o(.ARM.exidx) refers to rtentry.o(.ARM.Collect$$rtentry$$00000000) for .ARM.Collect$$rtentry$$00000000
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    _rserrno.o(.text) refers to rt_errno_addr_intlibspace.o(.text) for __aeabi_errno_addr
    dcheck.o(x$fpl$dcheck) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dcheck.o(x$fpl$dcheck) refers to retnan.o(x$fpl$retnan) for __fpl_return_NaN
    dcheck1.o(x$fpl$dcheck1) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dcheck1.o(x$fpl$dcheck1) refers to retnan.o(x$fpl$retnan) for __fpl_return_NaN
    drleqf.o(x$fpl$drleqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    drleqf.o(x$fpl$drleqf) refers to dcmpin.o(x$fpl$dcmpinfnan) for __fpl_dcmp_InfNaN
    dunder.o(x$fpl$dunder) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcheck1.o(x$fpl$fcheck1) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcheck1.o(x$fpl$fcheck1) refers to retnan.o(x$fpl$retnan) for __fpl_return_NaN
    funder.o(x$fpl$funder) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    scalbn.o(x$fpl$scalbnl) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    scalbn.o(x$fpl$scalbnl) refers to scalbn.o(x$fpl$scalbn) for scalbn
    scalbn.o(x$fpl$scalblnl) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    scalbn.o(x$fpl$scalblnl) refers to scalbn.o(x$fpl$scalbn) for scalbn
    scalbn.o(x$fpl$scalbln) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    scalbn.o(x$fpl$scalbln) refers to scalbn.o(x$fpl$scalbn) for scalbn
    scalbn.o(x$fpl$scalbn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    scalbn.o(x$fpl$scalbn) refers to dcheck1.o(x$fpl$dcheck1) for __fpl_dcheck_NaN1
    dunder.o(i.__mathlib_dbl_underflow) refers to scalbn.o(x$fpl$scalbn) for scalbn
    fpclassify.o(i.__ARM_fpclassify) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    poly.o(i.__kernel_poly) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    poly.o(i.__kernel_poly) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    poly.o(i.__kernel_poly) refers to daddsub_noclz.o(x$fpl$dadd) for __aeabi_dadd
    qnan.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sqrt.o(i.__softfp_sqrt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sqrt.o(i.__softfp_sqrt) refers to dleqf.o(x$fpl$dleqf) for __aeabi_cdcmple
    sqrt.o(i.__softfp_sqrt) refers to dsqrt.o(x$fpl$dsqrt) for _dsqrt
    sqrt.o(i.__softfp_sqrt) refers to _rserrno.o(.text) for __set_errno
    sqrt.o(i.sqrt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sqrt.o(i.sqrt) refers to dleqf.o(x$fpl$dleqf) for __aeabi_cdcmple
    sqrt.o(i.sqrt) refers to dsqrt.o(x$fpl$dsqrt) for _dsqrt
    sqrt.o(i.sqrt) refers to _rserrno.o(.text) for __set_errno
    sqrt_x.o(i.____softfp_sqrt$c99) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sqrt_x.o(i.____softfp_sqrt$c99) refers to dsqrt.o(x$fpl$dsqrt) for _dsqrt
    sqrt_x.o(i.____softfp_sqrt$c99) refers to _rserrno.o(.text) for __set_errno
    sqrt_x.o(i.__sqrt$c99) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    sqrt_x.o(i.__sqrt$c99) refers to dsqrt.o(x$fpl$dsqrt) for _dsqrt
    sqrt_x.o(i.__sqrt$c99) refers to _rserrno.o(.text) for __set_errno
    rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text) for main
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for .ARM.Collect$$rtentry$$00000002
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for .ARM.Collect$$rtentry$$00000009
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for .ARM.Collect$$rtentry$$0000000C
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    rtentry4.o(.ARM.exidx) refers to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    rt_errno_addr.o(.text) refers to rt_errno_addr.o(.bss) for __aeabi_errno_addr_data
    rt_errno_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    dcmpin.o(x$fpl$dcmpinfnan) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dcmpin.o(x$fpl$dcmpinfnan) refers to dcheck.o(x$fpl$dcheck) for __fpl_dcheck_NaN2
    dcmpin.o(x$fpl$dcmpinfnan) refers to trapv.o(x$fpl$trapveneer) for __fpl_cmpreturn
    dleqf.o(x$fpl$dleqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dleqf.o(x$fpl$dleqf) refers to dcmpin.o(x$fpl$dcmpinfnan) for __fpl_dcmp_InfNaN
    dsqrt.o(x$fpl$dsqrt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dsqrt.o(x$fpl$dsqrt) refers to dcheck1.o(x$fpl$dcheck1) for __fpl_dcheck_NaN1
    retnan.o(x$fpl$retnan) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    retnan.o(x$fpl$retnan) refers to trapv.o(x$fpl$trapveneer) for __fpl_cmpreturn
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002A) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000028) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000D) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000F) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002F) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000008) for __rt_lib_init_user_alloc_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    trapv.o(x$fpl$trapveneer) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$0000000C) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$0000000E) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000022) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000023) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    fpinit.o(x$fpl$fpinit) refers to rt_fp_status_addr_intlibspace.o(.text) for __rt_fp_status_addr
    sys_exit.o(.text) refers to use_no_semi.o(.text) for __I$use$semihosting
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for .ARM.Collect$$rtexit$$00000002
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    rt_fp_status_addr.o(.text) refers to rt_fp_status_addr.o(.bss) for __rt_fp_status_addr_data
    rt_fp_status_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    __raise.o(.text) refers to __raise.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000006) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000009) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing queue.o(.text), (2904 bytes).
    Removing spi.o(.bss), (512 bytes).
    Removing spi.o(.data), (519 bytes).
    Removing lcd.o(.data), (32 bytes).
    Removing adc.o(.bss), (32 bytes).

5 unused section(s) (total 3999 bytes) removed from the image.

==============================================================================

Adding Veneers to the image

    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_init' from rtentry2.o(.ARM.Collect$$rtentry$$0000000A).
    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_shutdown' from rtexit2.o(.ARM.Collect$$rtexit$$00000003).
    Adding TA veneer (4 bytes, Inline) for call to '__rt_exit' from exit.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '__set_errno' from pow.o(i.pow).
    Adding TA veneer (4 bytes, Inline) for call to '__aeabi_errno_addr' from _rserrno.o(.text).
    Adding TA veneer (4 bytes, Inline) for call to '_fp_init' from libinit.o(.ARM.Collect$$libinit$$00000000).

6 Veneer(s) (total 36 bytes) added to the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      260  startup.o(RESET)
    ../../angel/boardlib.s                   0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../../angel/boardlib.s                   0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../../angel/boardlib.s                   0x00000000   Number         0  boardshut.o ABSOLUTE
    ../../angel/boardlib.s                   0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../../angel/handlers.s                   0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../../angel/handlers.s                   0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../../angel/kernel.s                     0x00000000   Number         0  rtentry.o ABSOLUTE
    ../../angel/kernel.s                     0x00000000   Number         0  rtentry2.o ABSOLUTE
    ../../angel/kernel.s                     0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../../angel/kernel.s                     0x00000000   Number         0  rtexit.o ABSOLUTE
    ../../angel/kernel.s                     0x00000000   Number         0  rtentry4.o ABSOLUTE
    ../../angel/rt.s                         0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../../angel/rt.s                         0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../../angel/rt.s                         0x00000000   Number         0  rt_fp_status_addr.o ABSOLUTE
    ../../angel/rt.s                         0x00000000   Number         0  rt_errno_addr_intlibspace.o ABSOLUTE
    ../../angel/rt.s                         0x00000000   Number         0  rt_fp_status_addr_intlibspace.o ABSOLUTE
    ../../angel/rt.s                         0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../../angel/rt.s                         0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../../angel/rt.s                         0x00000000   Number         0  rt_errno_addr.o ABSOLUTE
    ../../angel/scatter.s                    0x00000000   Number         0  __scatter.o ABSOLUTE
    ../../angel/startup.s                    0x00000000   Number         0  __main.o ABSOLUTE
    ../../angel/sys.s                        0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../../angel/sys.s                        0x00000000   Number         0  libspace.o ABSOLUTE
    ../../angel/sys.s                        0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../../angel/sys.s                        0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../../angel/sysapp.c                     0x00000000   Number         0  sys_command.o ABSOLUTE
    ../../angel/sysapp.c                     0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../../armsys.c                           0x00000000   Number         0  no_argv.o ABSOLUTE
    ../../armsys.c                           0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../../armsys.c                           0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../../armsys.c                           0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../../d2f.s                              0x00000000   Number         0  d2f.o ABSOLUTE
    ../../daddsub.s                          0x00000000   Number         0  daddsub_noclz.o ABSOLUTE
    ../../dcheck.s                           0x00000000   Number         0  dcheck.o ABSOLUTE
    ../../dcheck1.s                          0x00000000   Number         0  dcheck1.o ABSOLUTE
    ../../dcmpin.s                           0x00000000   Number         0  dcmpin.o ABSOLUTE
    ../../ddiv.s                             0x00000000   Number         0  ddiv.o ABSOLUTE
    ../../dfix.s                             0x00000000   Number         0  dfix.o ABSOLUTE
    ../../dflt.s                             0x00000000   Number         0  dflt_noclz.o ABSOLUTE
    ../../division.s                         0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../../division.s                         0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../../divrt.s                            0x00000000   Number         0  divrt_7tdmi_div0.o ABSOLUTE
    ../../divrt.s                            0x00000000   Number         0  divrt_7tdmi.o ABSOLUTE
    ../../dleqf.s                            0x00000000   Number         0  dleqf.o ABSOLUTE
    ../../dmul.s                             0x00000000   Number         0  dmul.o ABSOLUTE
    ../../drleqf.s                           0x00000000   Number         0  drleqf.o ABSOLUTE
    ../../dsqrt.s                            0x00000000   Number         0  dsqrt.o ABSOLUTE
    ../../dunder.c                           0x00000000   Number         0  dunder.o ABSOLUTE
    ../../dunder.s                           0x00000000   Number         0  dunder.o ABSOLUTE
    ../../f2d.s                              0x00000000   Number         0  f2d.o ABSOLUTE
    ../../fcheck1.s                          0x00000000   Number         0  fcheck1.o ABSOLUTE
    ../../fenv.c                             0x00000000   Number         0  _rserrno.o ABSOLUTE
    ../../ffix.s                             0x00000000   Number         0  ffix.o ABSOLUTE
    ../../ffixu.s                            0x00000000   Number         0  ffixu.o ABSOLUTE
    ../../fflt.s                             0x00000000   Number         0  fflt_noclz.o ABSOLUTE
    ../../fpclassify.c                       0x00000000   Number         0  fpclassify.o ABSOLUTE
    ../../fpinit.s                           0x00000000   Number         0  fpinit.o ABSOLUTE
    ../../funder.s                           0x00000000   Number         0  funder.o ABSOLUTE
    ../../heapalloc.c                        0x00000000   Number         0  hrguard.o ABSOLUTE
    ../../heapaux.c                          0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../../libinit.s                          0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../../libinit.s                          0x00000000   Number         0  libinit.o ABSOLUTE
    ../../libinit.s                          0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../../libinit.s                          0x00000000   Number         0  libinit2.o ABSOLUTE
    ../../memcpset.s                         0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../../memcpset.s                         0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../../poly.c                             0x00000000   Number         0  poly.o ABSOLUTE
    ../../pow.c                              0x00000000   Number         0  pow.o ABSOLUTE
    ../../pow.c                              0x00000000   Number         0  pow_x.o ABSOLUTE
    ../../qnan.c                             0x00000000   Number         0  qnan.o ABSOLUTE
    ../../retnan.s                           0x00000000   Number         0  retnan.o ABSOLUTE
    ../../scalbn.s                           0x00000000   Number         0  scalbn.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  __raise.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../../signal.s                           0x00000000   Number         0  defsig.o ABSOLUTE
    ../../sqrt.c                             0x00000000   Number         0  sqrt_x.o ABSOLUTE
    ../../sqrt.c                             0x00000000   Number         0  sqrt.o ABSOLUTE
    ../../stdlib.c                           0x00000000   Number         0  exit.o ABSOLUTE
    ../../trapv.s                            0x00000000   Number         0  trapv.o ABSOLUTE
    ../../usenofp.s                          0x00000000   Number         0  usenofp.o ABSOLUTE
    Lcd.c                                    0x00000000   Number         0  lcd.o ABSOLUTE
    S:\FreeRTOSv9.0.0\FreeRTOS\Source\list.c 0x00000000   Number         0  list.o ABSOLUTE
    S:\FreeRTOSv9.0.0\FreeRTOS\Source\portable\MemMang\heap_2.c 0x00000000   Number         0  heap_2.o ABSOLUTE
    S:\FreeRTOSv9.0.0\FreeRTOS\Source\portable\RVDS\ARM7_LPC21xx\port.c 0x00000000   Number         0  port.o ABSOLUTE
    S:\FreeRTOSv9.0.0\FreeRTOS\Source\portable\RVDS\ARM7_LPC21xx\portASM.s 0x00000000   Number         0  portasm.o ABSOLUTE
    S:\FreeRTOSv9.0.0\FreeRTOS\Source\queue.c 0x00000000   Number         0  queue.o ABSOLUTE
    S:\FreeRTOSv9.0.0\FreeRTOS\Source\tasks.c 0x00000000   Number         0  tasks.o ABSOLUTE
    Startup.s                                0x00000000   Number         0  startup.o ABSOLUTE
    adc.c                                    0x00000000   Number         0  adc.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    motion_control.c                         0x00000000   Number         0  motion_control.o ABSOLUTE
    pwm.c                                    0x00000000   Number         0  pwm.o ABSOLUTE
    spi.c                                    0x00000000   Number         0  spi.o ABSOLUTE
    Undef_Handler                            0x00000040   ARM Code       4  startup.o(RESET)
    PAbt_Handler                             0x00000048   ARM Code       4  startup.o(RESET)
    DAbt_Handler                             0x0000004c   ARM Code       4  startup.o(RESET)
    IRQ_Handler                              0x00000050   ARM Code       4  startup.o(RESET)
    FIQ_Handler                              0x00000054   ARM Code       4  startup.o(RESET)
    !!!main                                  0x00000104   Section        8  __main.o(!!!main)
    !!!scatter                               0x0000010c   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x00000148   Section       40  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x00000170   Section       44  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x000001a4   Section        6  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000006          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$00000008          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000008)
    .ARM.Collect$$libinit$$0000000A          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000D          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000D)
    .ARM.Collect$$libinit$$0000000F          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    .ARM.Collect$$libinit$$00000011          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000028          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000028)
    .ARM.Collect$$libinit$$0000002A          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002A)
    .ARM.Collect$$libinit$$0000002C          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$0000002F          0x000001aa   Section       12  libinit2.o(.ARM.Collect$$libinit$$0000002F)
    .ARM.Collect$$libshutdown$$00000000      0x000001c0   Section        4  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000003      0x000001c4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    .ARM.Collect$$libshutdown$$00000006      0x000001c4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    .ARM.Collect$$libshutdown$$00000009      0x000001c4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    .ARM.Collect$$libshutdown$$0000000B      0x000001c4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B)
    .ARM.Collect$$libshutdown$$0000000E      0x000001c4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    .ARM.Collect$$libshutdown$$0000000F      0x000001c4   Section        6  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$rtentry$$00000000          0x000001cc   Section        0  rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x000001cc   Section        0  rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x000001cc   Section        8  rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x000001d4   Section        0  rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x000001d4   Section        4  rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x000001d8   Section        0  rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x000001d8   Section       40  rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x00000204   Section        4  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000208   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000208   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x0000020c   Section        8  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x00000214   Section        0  main.o(.text)
    .text                                    0x00000720   Section        0  list.o(.text)
    .text                                    0x00000830   Section        0  tasks.o(.text)
    prvInitialiseTaskLists                   0x00000830   ARM Code     112  tasks.o(.text)
    prvAddNewTaskToReadyList                 0x000008a0   ARM Code     260  tasks.o(.text)
    prvInitialiseNewTask                     0x000009a4   ARM Code     240  tasks.o(.text)
    prvResetNextTaskUnblockTime              0x00000b40   ARM Code      88  tasks.o(.text)
    prvDeleteTCB                             0x00000b98   ARM Code      32  tasks.o(.text)
    prvAddCurrentTaskToDelayedList           0x00000fa8   ARM Code     184  tasks.o(.text)
    prvTaskIsTaskSuspended                   0x00001484   ARM Code     128  tasks.o(.text)
    prvCheckTasksWaitingTermination          0x0000169c   ARM Code     160  tasks.o(.text)
    prvIdleTask                              0x0000173c   ARM Code      36  tasks.o(.text)
    prvSearchForNameWithinSingleList         0x00001858   ARM Code     244  tasks.o(.text)
    .text                                    0x00002418   Section        0  heap_2.o(.text)
    prvHeapInit                              0x00002418   ARM Code      72  heap_2.o(.text)
    .text                                    0x00002628   Section        0  port.o(.text)
    prvSetupTimerInterrupt                   0x00002718   ARM Code     100  port.o(.text)
    .text                                    0x00002824   Section        0  spi.o(.text)
    .text                                    0x00002a48   Section        0  pwm.o(.text)
    .text                                    0x00002b48   Section        0  motion_control.o(.text)
    .text                                    0x00002f68   Section        0  lcd.o(.text)
    .text                                    0x000034e0   Section       32  startup.o(.text)
    .text                                    0x00003500   Section        0  adc.o(.text)
    .text                                    0x000037fc   Section      384  aeabi_sdiv.o(.text)
    __arm_div8                               0x00003828   ARM Code       0  aeabi_sdiv.o(.text)
    __arm_div4                               0x00003858   ARM Code       0  aeabi_sdiv.o(.text)
    __arm_div_large                          0x000038ac   ARM Code       0  aeabi_sdiv.o(.text)
    .text                                    0x0000397c   Section        0  heapauxi.o(.text)
    .text                                    0x0000398c   Section        0  _rserrno.o(.text)
    .text                                    0x000039ac   Section       16  rt_errno_addr_intlibspace.o(.text)
    .text                                    0x000039bc   Section       12  libspace.o(.text)
    .text                                    0x000039c8   Section       96  sys_stackheap_outer.o(.text)
    .text                                    0x00003a28   Section        0  exit.o(.text)
    .text                                    0x00003a34   Section       24  sys_exit.o(.text)
    .text                                    0x00003a4c   Section       16  rt_fp_status_addr_intlibspace.o(.text)
    .text                                    0x00003a5c   Section        4  use_no_semi.o(.text)
    .text_udiv                               0x00003a60   Section       28  aeabi_sdiv.o(.text_udiv)
    PORT_ASM                                 0x00003a7c   Section      396  portasm.o(PORT_ASM)
    i.__kernel_poly                          0x00003c08   Section        0  poly.o(i.__kernel_poly)
    i.pow                                    0x00003d08   Section        0  pow.o(i.pow)
    i.sqrt                                   0x00004c30   Section        0  sqrt.o(i.sqrt)
    x$fpl$d2f                                0x00004c80   Section      172  d2f.o(x$fpl$d2f)
    x$fpl$dadd                               0x00004d2c   Section      468  daddsub_noclz.o(x$fpl$dadd)
    _dadd1                                   0x00004d3c   ARM Code       0  daddsub_noclz.o(x$fpl$dadd)
    x$fpl$dcheck                             0x00004f00   Section       16  dcheck.o(x$fpl$dcheck)
    x$fpl$dcheck1                            0x00004f10   Section       16  dcheck1.o(x$fpl$dcheck1)
    x$fpl$dcmpinfnan                         0x00004f20   Section      128  dcmpin.o(x$fpl$dcmpinfnan)
    x$fpl$ddiv                               0x00004fa0   Section     1116  ddiv.o(x$fpl$ddiv)
    ddiv_entry                               0x00004fa4   ARM Code       0  ddiv.o(x$fpl$ddiv)
    x$fpl$dfix                               0x000053fc   Section      176  dfix.o(x$fpl$dfix)
    x$fpl$dflt                               0x000054ac   Section       88  dflt_noclz.o(x$fpl$dflt)
    x$fpl$dfltu                              0x00005504   Section       12  dflt_noclz.o(x$fpl$dfltu)
    x$fpl$dleqf                              0x00005510   Section      136  dleqf.o(x$fpl$dleqf)
    x$fpl$dmul                               0x00005598   Section      476  dmul.o(x$fpl$dmul)
    x$fpl$drleqf                             0x00005774   Section      160  drleqf.o(x$fpl$drleqf)
    x$fpl$drsb                               0x00005814   Section       24  daddsub_noclz.o(x$fpl$drsb)
    x$fpl$dsqrt                              0x0000582c   Section      392  dsqrt.o(x$fpl$dsqrt)
    x$fpl$dsub                               0x000059b4   Section      584  daddsub_noclz.o(x$fpl$dsub)
    _dsub1                                   0x000059c4   ARM Code       0  daddsub_noclz.o(x$fpl$dsub)
    x$fpl$dunder                             0x00005bfc   Section      280  dunder.o(x$fpl$dunder)
    x$fpl$f2d                                0x00005d14   Section      100  f2d.o(x$fpl$f2d)
    x$fpl$fcheck1                            0x00005d78   Section       12  fcheck1.o(x$fpl$fcheck1)
    x$fpl$ffix                               0x00005d84   Section      116  ffix.o(x$fpl$ffix)
    x$fpl$ffixu                              0x00005df8   Section       96  ffixu.o(x$fpl$ffixu)
    x$fpl$fflt                               0x00005e58   Section       92  fflt_noclz.o(x$fpl$fflt)
    x$fpl$ffltu                              0x00005eb4   Section        8  fflt_noclz.o(x$fpl$ffltu)
    x$fpl$fpinit                             0x00005ec0   Section       24  fpinit.o(x$fpl$fpinit)
    x$fpl$funder                             0x00005ed8   Section      148  funder.o(x$fpl$funder)
    x$fpl$retnan                             0x00005f6c   Section      116  retnan.o(x$fpl$retnan)
    x$fpl$scalbn                             0x00005fe0   Section      108  scalbn.o(x$fpl$scalbn)
    x$fpl$trapveneer                         0x0000604c   Section       60  trapv.o(x$fpl$trapveneer)
    .constdata                               0x00006088   Section      136  pow.o(.constdata)
    x$fpl$usenofp                            0x00006088   Section        0  usenofp.o(x$fpl$usenofp)
    bp                                       0x00006088   Data          16  pow.o(.constdata)
    dp_h                                     0x00006098   Data          16  pow.o(.constdata)
    dp_l                                     0x000060a8   Data          16  pow.o(.constdata)
    L                                        0x000060b8   Data          48  pow.o(.constdata)
    P                                        0x000060e8   Data          40  pow.o(.constdata)
    .constdata                               0x00006110   Section        8  qnan.o(.constdata)
    .data                                    0x40000000   Section        9  main.o(.data)
    .data                                    0x4000000c   Section       60  tasks.o(.data)
    uxDeletedTasksWaitingCleanUp             0x40000010   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x40000014   Data           4  tasks.o(.data)
    xTickCount                               0x40000018   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x4000001c   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x40000020   Data           4  tasks.o(.data)
    uxPendedTicks                            0x40000024   Data           4  tasks.o(.data)
    xYieldPending                            0x40000028   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x4000002c   Data           4  tasks.o(.data)
    uxTaskNumber                             0x40000030   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x40000034   Data           4  tasks.o(.data)
    xIdleTaskHandle                          0x40000038   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x4000003c   Data           4  tasks.o(.data)
    pxDelayedTaskList                        0x40000040   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x40000044   Data           4  tasks.o(.data)
    .data                                    0x40000048   Section       24  heap_2.o(.data)
    xFreeBytesRemaining                      0x40000048   Data           4  heap_2.o(.data)
    xHeapHasBeenInitialised                  0x4000004c   Data           4  heap_2.o(.data)
    xStart                                   0x40000050   Data           8  heap_2.o(.data)
    xEnd                                     0x40000058   Data           8  heap_2.o(.data)
    .data                                    0x40000060   Section        4  port.o(.data)
    .data                                    0x40000064   Section        8  motion_control.o(.data)
    .bss                                     0x4000006c   Section       17  main.o(.bss)
    .bss                                     0x40000080   Section      300  tasks.o(.bss)
    pxReadyTasksLists                        0x40000080   Data         200  tasks.o(.bss)
    xDelayedTaskList1                        0x40000148   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x4000015c   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x40000170   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x40000184   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x40000198   Data          20  tasks.o(.bss)
    .bss                                     0x400001ac   Section    13312  heap_2.o(.bss)
    ucHeap                                   0x400001ac   Data       13312  heap_2.o(.bss)
    .bss                                     0x400035ac   Section       96  libspace.o(.bss)
    HEAP                                     0x40003610   Section        0  startup.o(HEAP)
    STACK                                    0x40003610   Section     1568  startup.o(STACK)
    Heap_Mem                                 0x40003610   Data           0  startup.o(HEAP)
    Stack_Mem                                0x40003610   Data        1568  startup.o(STACK)
    Stack_Top                                0x40003c30   Data           0  startup.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv1$ARM_ISAv4$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEX$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __fpl_infinity                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    Reset_Handler                            0x00000058   ARM Code       0  startup.o(RESET)
    __main                                   0x00000104   ARM Code       8  __main.o(!!!main)
    __scatterload                            0x0000010c   ARM Code       0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x0000010c   ARM Code      52  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000120   ARM Code       0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x00000148   ARM Code      40  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x00000170   ARM Code      44  __scatter_zi.o(!!handler_zi)
    Inline ARM to Thumb Veneer to __rt_lib_init 0x0000019c   ARM Code       8  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init                            0x000001a5   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002A)
    __rt_lib_init_argv_1                     0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000028)
    __rt_lib_init_atexit_1                   0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_clock_1                    0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_cpp_1                      0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_exceptions_1               0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_fp_trap_1                  0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_getenv_1                   0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_heap_1                     0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_lc_collate_1               0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000D)
    __rt_lib_init_lc_ctype_1                 0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    __rt_lib_init_lc_monetary_1              0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_numeric_1               0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_time_1                  0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_rand_1                     0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_return                     0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002F)
    __rt_lib_init_signal_1                   0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_stdio_1                    0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_user_alloc_1               0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000008)
    Inline ARM to Thumb Veneer to __rt_lib_shutdown 0x000001b8   ARM Code       8  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown                        0x000001c1   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_fp_trap_1              0x000001c5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    __rt_lib_shutdown_heap_1                 0x000001c5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    __rt_lib_shutdown_return                 0x000001c5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_signal_1               0x000001c5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    __rt_lib_shutdown_stdio_1                0x000001c5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    __rt_lib_shutdown_user_alloc_1           0x000001c5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B)
    __rt_entry                               0x000001cc   ARM Code       0  rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x000001cc   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x000001cc   ARM Code       0  rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x000001d4   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x000001d4   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x000001d8   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x000001d8   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    Inline Thumb to ARM Veneer to __rt_exit  0x00000201   Thumb Code     4  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit                                0x00000204   ARM Code       0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000208   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000208   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x0000020c   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    UART0_SendByte                           0x00000214   ARM Code      32  main.o(.text)
    IRQ_UART0                                0x00000234   ARM Code      48  main.o(.text)
    Init_UART0                               0x00000264   ARM Code     124  main.o(.text)
    UART0_SendStr                            0x000002e0   ARM Code      52  main.o(.text)
    UART1_SendByte                           0x00000314   ARM Code      32  main.o(.text)
    IRQ_UART1                                0x00000334   ARM Code      48  main.o(.text)
    Init_UART1                               0x00000364   ARM Code     124  main.o(.text)
    UART1_SendByte_int                       0x000003e0   ARM Code      32  main.o(.text)
    UART1_SendStr                            0x00000400   ARM Code      52  main.o(.text)
    Init_Sensor_Switch_Pin                   0x00000434   ARM Code      48  main.o(.text)
    MEGA8_ADCRead                            0x00000464   ARM Code     124  main.o(.text)
    vsend                                    0x000004e0   ARM Code      44  main.o(.text)
    vcalc                                    0x0000050c   ARM Code     260  main.o(.text)
    vline                                    0x00000610   ARM Code      28  main.o(.text)
    Init_Ports                               0x0000062c   ARM Code      24  main.o(.text)
    Init_Peripherals                         0x00000644   ARM Code      48  main.o(.text)
    main                                     0x00000674   ARM Code     120  main.o(.text)
    vListInitialise                          0x00000720   ARM Code      44  list.o(.text)
    vListInitialiseItem                      0x0000074c   ARM Code      12  list.o(.text)
    vListInsertEnd                           0x00000758   ARM Code      48  list.o(.text)
    vListInsert                              0x00000788   ARM Code      92  list.o(.text)
    uxListRemove                             0x000007e4   ARM Code      76  list.o(.text)
    xTaskCreate                              0x00000a94   ARM Code     172  tasks.o(.text)
    vTaskDelete                              0x00000bb8   ARM Code     220  tasks.o(.text)
    xTaskIncrementTick                       0x00000c94   ARM Code     440  tasks.o(.text)
    xTaskResumeAll                           0x00000e4c   ARM Code     348  tasks.o(.text)
    vTaskSuspendAll                          0x00001060   ARM Code      24  tasks.o(.text)
    vTaskDelayUntil                          0x00001078   ARM Code     152  tasks.o(.text)
    vTaskDelay                               0x00001110   ARM Code      64  tasks.o(.text)
    uxTaskPriorityGet                        0x00001150   ARM Code      60  tasks.o(.text)
    uxTaskPriorityGetFromISR                 0x0000118c   ARM Code      44  tasks.o(.text)
    vTaskPrioritySet                         0x000011b8   ARM Code     328  tasks.o(.text)
    vTaskSwitchContext                       0x00001300   ARM Code     184  tasks.o(.text)
    vTaskSuspend                             0x000013b8   ARM Code     204  tasks.o(.text)
    vTaskResume                              0x00001504   ARM Code     160  tasks.o(.text)
    xTaskResumeFromISR                       0x000015a4   ARM Code     248  tasks.o(.text)
    vTaskStartScheduler                      0x00001760   ARM Code     108  tasks.o(.text)
    vTaskEndScheduler                        0x000017cc   ARM Code      40  tasks.o(.text)
    xTaskGetTickCount                        0x000017f4   ARM Code      32  tasks.o(.text)
    xTaskGetTickCountFromISR                 0x00001814   ARM Code      16  tasks.o(.text)
    uxTaskGetNumberOfTasks                   0x00001824   ARM Code      12  tasks.o(.text)
    pcTaskGetName                            0x00001830   ARM Code      40  tasks.o(.text)
    xTaskGetHandle                           0x0000194c   ARM Code     208  tasks.o(.text)
    vTaskPlaceOnEventList                    0x00001a1c   ARM Code      52  tasks.o(.text)
    vTaskPlaceOnUnorderedEventList           0x00001a50   ARM Code      72  tasks.o(.text)
    xTaskRemoveFromEventList                 0x00001a98   ARM Code     180  tasks.o(.text)
    xTaskRemoveFromUnorderedEventList        0x00001b4c   ARM Code     156  tasks.o(.text)
    vTaskSetTimeOutState                     0x00001be8   ARM Code      28  tasks.o(.text)
    xTaskCheckForTimeOut                     0x00001c04   ARM Code     160  tasks.o(.text)
    vTaskMissedYield                         0x00001ca4   ARM Code      16  tasks.o(.text)
    xTaskGetCurrentTaskHandle                0x00001cb4   ARM Code      12  tasks.o(.text)
    vTaskPriorityInherit                     0x00001cc0   ARM Code     232  tasks.o(.text)
    xTaskPriorityDisinherit                  0x00001da8   ARM Code     164  tasks.o(.text)
    uxTaskResetEventItemValue                0x00001e4c   ARM Code      44  tasks.o(.text)
    pvTaskIncrementMutexHeldCount            0x00001e78   ARM Code      52  tasks.o(.text)
    ulTaskNotifyTake                         0x00001eac   ARM Code     180  tasks.o(.text)
    xTaskNotifyWait                          0x00001f60   ARM Code     228  tasks.o(.text)
    xTaskGenericNotify                       0x00002044   ARM Code     300  tasks.o(.text)
    xTaskGenericNotifyFromISR                0x00002170   ARM Code     364  tasks.o(.text)
    vTaskNotifyGiveFromISR                   0x000022dc   ARM Code     224  tasks.o(.text)
    xTaskNotifyStateClear                    0x000023bc   ARM Code      88  tasks.o(.text)
    pvPortMalloc                             0x00002460   ARM Code     300  heap_2.o(.text)
    vPortFree                                0x0000258c   ARM Code     116  heap_2.o(.text)
    xPortGetFreeHeapSize                     0x00002600   ARM Code      12  heap_2.o(.text)
    vPortInitialiseBlocks                    0x0000260c   ARM Code       4  heap_2.o(.text)
    pxPortInitialiseStack                    0x00002628   ARM Code     240  port.o(.text)
    xPortStartScheduler                      0x0000277c   ARM Code      24  port.o(.text)
    vPortEndScheduler                        0x00002794   ARM Code       4  port.o(.text)
    vPortEnterCritical                       0x00002798   ARM Code      36  port.o(.text)
    vPortExitCritical                        0x000027bc   ARM Code      68  port.o(.text)
    SPI0_Init                                0x00002824   ARM Code     108  spi.o(.text)
    SPI0_Send                                0x00002890   ARM Code      80  spi.o(.text)
    SPI0_ReceiveByte                         0x000028e0   ARM Code      48  spi.o(.text)
    SPI0_Receive                             0x00002910   ARM Code      52  spi.o(.text)
    SPI1_Init                                0x00002944   ARM Code     152  spi.o(.text)
    SPI1_SendByte                            0x000029dc   ARM Code      44  spi.o(.text)
    SPI1_ReceiveByte                         0x00002a08   ARM Code      48  spi.o(.text)
    Init_PWM                                 0x00002a48   ARM Code     164  pwm.o(.text)
    UpdateLeftPWM                            0x00002aec   ARM Code      24  pwm.o(.text)
    UpdateRightPWM                           0x00002b04   ARM Code      24  pwm.o(.text)
    UpdateVelocity                           0x00002b1c   ARM Code      36  pwm.o(.text)
    R_Stop                                   0x00002b48   ARM Code      24  motion_control.o(.text)
    L_Stop                                   0x00002b60   ARM Code      24  motion_control.o(.text)
    Stop                                     0x00002b78   ARM Code      20  motion_control.o(.text)
    Init_Motion_Pin                          0x00002b8c   ARM Code     156  motion_control.o(.text)
    L_Forward                                0x00002c28   ARM Code      16  motion_control.o(.text)
    L_Back                                   0x00002c38   ARM Code      16  motion_control.o(.text)
    R_Forward                                0x00002c48   ARM Code      16  motion_control.o(.text)
    R_Back                                   0x00002c58   ARM Code      16  motion_control.o(.text)
    Forward                                  0x00002c68   ARM Code      24  motion_control.o(.text)
    Back                                     0x00002c80   ARM Code      24  motion_control.o(.text)
    Left                                     0x00002c98   ARM Code      24  motion_control.o(.text)
    Right                                    0x00002cb0   ARM Code      24  motion_control.o(.text)
    Soft_Left                                0x00002cc8   ARM Code      20  motion_control.o(.text)
    Soft_Right                               0x00002cdc   ARM Code      20  motion_control.o(.text)
    Soft_Left2                               0x00002cf0   ARM Code      20  motion_control.o(.text)
    Soft_Right2                              0x00002d04   ARM Code      20  motion_control.o(.text)
    Angle_Rotate                             0x00002d18   ARM Code     192  motion_control.o(.text)
    Linear_Distance_mm                       0x00002dd8   ARM Code     128  motion_control.o(.text)
    Forward_mm                               0x00002e58   ARM Code      28  motion_control.o(.text)
    Back_mm                                  0x00002e74   ARM Code      28  motion_control.o(.text)
    Left_Degrees                             0x00002e90   ARM Code      28  motion_control.o(.text)
    Right_Degrees                            0x00002eac   ARM Code      28  motion_control.o(.text)
    Soft_Left_Degrees                        0x00002ec8   ARM Code      32  motion_control.o(.text)
    Soft_Right_Degrees                       0x00002ee8   ARM Code      32  motion_control.o(.text)
    Soft_Left_2_Degrees                      0x00002f08   ARM Code      64  motion_control.o(.text)
    Soft_Right_2_Degrees                     0x00002f48   ARM Code      32  motion_control.o(.text)
    Init_LCD_Pin                             0x00002f68   ARM Code      48  lcd.o(.text)
    DelaymSec                                0x00002f98   ARM Code      44  lcd.o(.text)
    LCD_Command                              0x00002fc4   ARM Code     188  lcd.o(.text)
    LCD_4Bit_Mode                            0x00003080   ARM Code     376  lcd.o(.text)
    LCD_Data                                 0x000031f8   ARM Code     188  lcd.o(.text)
    LCD_Init                                 0x000032b4   ARM Code      36  lcd.o(.text)
    LCD_String                               0x000032d8   ARM Code      44  lcd.o(.text)
    LCD_Home                                 0x00003304   ARM Code      20  lcd.o(.text)
    LCD_Cursor                               0x00003318   ARM Code      84  lcd.o(.text)
    LCD_Print                                0x0000336c   ARM Code     364  lcd.o(.text)
    __user_initial_stackheap                 0x000034e0   ARM Code       0  startup.o(.text)
    Init_ADC_Pin                             0x00003500   ARM Code      80  adc.o(.text)
    Init_ADC0                                0x00003550   ARM Code      16  adc.o(.text)
    Init_ADC1                                0x00003560   ARM Code      16  adc.o(.text)
    AD0_Conversion                           0x00003570   ARM Code     128  adc.o(.text)
    AD1_Conversion                           0x000035f0   ARM Code     128  adc.o(.text)
    Sharp_GP2D12_Estimation                  0x00003670   ARM Code     180  adc.o(.text)
    Batt_Voltage_Conversion                  0x00003724   ARM Code     144  adc.o(.text)
    __aeabi_idiv                             0x000037fc   ARM Code       0  aeabi_sdiv.o(.text)
    __aeabi_idivmod                          0x000037fc   ARM Code     384  aeabi_sdiv.o(.text)
    __use_two_region_memory                  0x0000397d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0000397f   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x00003981   Thumb Code     2  heapauxi.o(.text)
    Inline ARM to Thumb Veneer to __set_errno 0x00003984   ARM Code       8  _rserrno.o(.text)
    __read_errno                             0x0000398d   Thumb Code    14  _rserrno.o(.text)
    __set_errno                              0x0000399b   Thumb Code    12  _rserrno.o(.text)
    Inline Thumb to ARM Veneer to __aeabi_errno_addr 0x000039a9   Thumb Code     4  rt_errno_addr_intlibspace.o(.text)
    __aeabi_errno_addr                       0x000039ac   ARM Code      16  rt_errno_addr_intlibspace.o(.text)
    __errno$intlibspace                      0x000039ac   ARM Code       0  rt_errno_addr_intlibspace.o(.text)
    __rt_errno_addr$intlibspace              0x000039ac   ARM Code       0  rt_errno_addr_intlibspace.o(.text)
    __user_libspace                          0x000039bc   ARM Code      12  libspace.o(.text)
    __user_perproc_libspace                  0x000039bc   ARM Code       0  libspace.o(.text)
    __user_perthread_libspace                0x000039bc   ARM Code       0  libspace.o(.text)
    __user_setup_stackheap                   0x000039c8   ARM Code      96  sys_stackheap_outer.o(.text)
    exit                                     0x00003a29   Thumb Code    12  exit.o(.text)
    _sys_exit                                0x00003a34   ARM Code      20  sys_exit.o(.text)
    __rt_fp_status_addr                      0x00003a4c   ARM Code      16  rt_fp_status_addr_intlibspace.o(.text)
    __I$use$semihosting                      0x00003a5c   ARM Code       0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00003a5c   ARM Code       4  use_no_semi.o(.text)
    __aeabi_uidiv                            0x00003a60   ARM Code       0  aeabi_sdiv.o(.text_udiv)
    __aeabi_uidivmod                         0x00003a60   ARM Code      28  aeabi_sdiv.o(.text_udiv)
    vPortStartFirstTask                      0x00003a7c   ARM Code       0  portasm.o(PORT_ASM)
    vPortYield                               0x00003aac   ARM Code       0  portasm.o(PORT_ASM)
    vPortYieldProcessor                      0x00003ab4   ARM Code       0  portasm.o(PORT_ASM)
    vPreemptiveTick                          0x00003b40   ARM Code       0  portasm.o(PORT_ASM)
    __kernel_poly                            0x00003c08   ARM Code     256  poly.o(i.__kernel_poly)
    pow                                      0x00003d08   ARM Code    3876  pow.o(i.pow)
    sqrt                                     0x00004c30   ARM Code      80  sqrt.o(i.sqrt)
    __aeabi_d2f                              0x00004c80   ARM Code       0  d2f.o(x$fpl$d2f)
    _d2f                                     0x00004c80   ARM Code     168  d2f.o(x$fpl$d2f)
    __fpl_inf_d2f                            0x00004d20   ARM Code       0  d2f.o(x$fpl$d2f)
    __aeabi_dadd                             0x00004d2c   ARM Code       0  daddsub_noclz.o(x$fpl$dadd)
    _dadd                                    0x00004d2c   ARM Code     452  daddsub_noclz.o(x$fpl$dadd)
    __fpl_inf_dadd                           0x00004ea8   ARM Code       0  daddsub_noclz.o(x$fpl$dadd)
    __fpl_dcheck_NaN2                        0x00004f00   ARM Code      12  dcheck.o(x$fpl$dcheck)
    __fpl_dcheck_NaN1                        0x00004f10   ARM Code      12  dcheck1.o(x$fpl$dcheck1)
    __fpl_dcmp_InfNaN                        0x00004f20   ARM Code     128  dcmpin.o(x$fpl$dcmpinfnan)
    __fpl_inf_dcmp                           0x00004f44   ARM Code       0  dcmpin.o(x$fpl$dcmpinfnan)
    __aeabi_ddiv                             0x00004fa0   ARM Code       0  ddiv.o(x$fpl$ddiv)
    _ddiv                                    0x00004fa0   ARM Code     464  ddiv.o(x$fpl$ddiv)
    __fpl_inf_ddiv                           0x0000512c   ARM Code       0  ddiv.o(x$fpl$ddiv)
    _ddiv_mantissas                          0x00005170   ARM Code     380  ddiv.o(x$fpl$ddiv)
    __aeabi_d2iz                             0x000053fc   ARM Code       0  dfix.o(x$fpl$dfix)
    _dfix                                    0x000053fc   ARM Code     172  dfix.o(x$fpl$dfix)
    __fpl_inf_dfix                           0x0000549c   ARM Code       0  dfix.o(x$fpl$dfix)
    __aeabi_i2d                              0x000054ac   ARM Code       0  dflt_noclz.o(x$fpl$dflt)
    _dflt                                    0x000054ac   ARM Code      88  dflt_noclz.o(x$fpl$dflt)
    __dflt_normalise                         0x000054bc   ARM Code       0  dflt_noclz.o(x$fpl$dflt)
    __aeabi_ui2d                             0x00005504   ARM Code       0  dflt_noclz.o(x$fpl$dfltu)
    _dfltu                                   0x00005504   ARM Code      12  dflt_noclz.o(x$fpl$dfltu)
    __aeabi_cdcmple                          0x00005510   ARM Code       0  dleqf.o(x$fpl$dleqf)
    _dcmple                                  0x00005510   ARM Code     132  dleqf.o(x$fpl$dleqf)
    __aeabi_dmul                             0x00005598   ARM Code       0  dmul.o(x$fpl$dmul)
    _dmul                                    0x00005598   ARM Code     460  dmul.o(x$fpl$dmul)
    __fpl_inf_dmul                           0x00005730   ARM Code       0  dmul.o(x$fpl$dmul)
    __aeabi_cdrcmple                         0x00005774   ARM Code       0  drleqf.o(x$fpl$drleqf)
    _drcmple                                 0x00005774   ARM Code     156  drleqf.o(x$fpl$drleqf)
    __aeabi_drsub                            0x00005814   ARM Code       0  daddsub_noclz.o(x$fpl$drsb)
    _drsb                                    0x00005814   ARM Code      24  daddsub_noclz.o(x$fpl$drsb)
    _dsqrt                                   0x0000582c   ARM Code     384  dsqrt.o(x$fpl$dsqrt)
    __fpl_inf_dsqrt                          0x00005990   ARM Code       0  dsqrt.o(x$fpl$dsqrt)
    __aeabi_dsub                             0x000059b4   ARM Code       0  daddsub_noclz.o(x$fpl$dsub)
    _dsub                                    0x000059b4   ARM Code     572  daddsub_noclz.o(x$fpl$dsub)
    __fpl_inf_dsub                           0x00005ba8   ARM Code       0  daddsub_noclz.o(x$fpl$dsub)
    __dunder                                 0x00005bfc   ARM Code     276  dunder.o(x$fpl$dunder)
    __dunder_d                               0x00005d10   ARM Code       4  dunder.o(x$fpl$dunder)
    __aeabi_f2d                              0x00005d14   ARM Code       0  f2d.o(x$fpl$f2d)
    _f2d                                     0x00005d14   ARM Code      96  f2d.o(x$fpl$f2d)
    __fpl_inf_f2d                            0x00005d68   ARM Code       0  f2d.o(x$fpl$f2d)
    __fpl_fcheck_NaN1                        0x00005d78   ARM Code       8  fcheck1.o(x$fpl$fcheck1)
    __aeabi_f2iz                             0x00005d84   ARM Code       0  ffix.o(x$fpl$ffix)
    _ffix                                    0x00005d84   ARM Code     112  ffix.o(x$fpl$ffix)
    __fpl_inf_ffix                           0x00005de8   ARM Code       0  ffix.o(x$fpl$ffix)
    __aeabi_f2uiz                            0x00005df8   ARM Code       0  ffixu.o(x$fpl$ffixu)
    _ffixu                                   0x00005df8   ARM Code      92  ffixu.o(x$fpl$ffixu)
    __fpl_inf_ffixu                          0x00005e4c   ARM Code       0  ffixu.o(x$fpl$ffixu)
    __aeabi_i2f                              0x00005e58   ARM Code       0  fflt_noclz.o(x$fpl$fflt)
    _fflt                                    0x00005e58   ARM Code      92  fflt_noclz.o(x$fpl$fflt)
    __fflt_normalise                         0x00005e64   ARM Code       0  fflt_noclz.o(x$fpl$fflt)
    __aeabi_ui2f                             0x00005eb4   ARM Code       0  fflt_noclz.o(x$fpl$ffltu)
    _ffltu                                   0x00005eb4   ARM Code       8  fflt_noclz.o(x$fpl$ffltu)
    Inline Thumb to ARM Veneer to _fp_init   0x00005ebd   Thumb Code     4  fpinit.o(x$fpl$fpinit)
    _fp_init                                 0x00005ec0   ARM Code      24  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x00005ed0   ARM Code       0  fpinit.o(x$fpl$fpinit)
    __funder                                 0x00005ed8   ARM Code     144  funder.o(x$fpl$funder)
    __funder_d                               0x00005f68   ARM Code       4  funder.o(x$fpl$funder)
    __fpl_return_NaN                         0x00005f6c   ARM Code     116  retnan.o(x$fpl$retnan)
    __ARM_scalbn                             0x00005fe0   ARM Code       0  scalbn.o(x$fpl$scalbn)
    scalbn                                   0x00005fe0   ARM Code     108  scalbn.o(x$fpl$scalbn)
    __fpl_inf_scalbn                         0x00006048   ARM Code       0  scalbn.o(x$fpl$scalbn)
    __fpl_cmpreturn                          0x0000604c   ARM Code      60  trapv.o(x$fpl$trapveneer)
    __I$use$fp                               0x00006088   ARM Code       0  usenofp.o(x$fpl$usenofp)
    __mathlib_zero                           0x00006110   Data           8  qnan.o(.constdata)
    Region$$Table$$Base                      0x00006118   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00006138   Number         0  anon$$obj.o(Region$$Table)
    Temp                                     0x40000000   Data           1  main.o(.data)
    Temp2                                    0x40000001   Data           1  main.o(.data)
    i                                        0x40000004   Data           4  main.o(.data)
    Robot_ID                                 0x40000008   Data           1  main.o(.data)
    pxCurrentTCB                             0x4000000c   Data           4  tasks.o(.data)
    ulCriticalNesting                        0x40000060   Data           4  port.o(.data)
    Left_Shaft_Count                         0x40000064   Data           4  motion_control.o(.data)
    Right_Shaft_Count                        0x40000068   Data           4  motion_control.o(.data)
    sen_dat                                  0x4000006c   Data          17  main.o(.bss)
    __libspace_start                         0x400035ac   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x4000360c   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000104

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x000061a4, Max: 0x00080000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x00000000, Size: 0x00006138, Max: 0x00080000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000104   Code   RO          241    RESET               startup.o
    0x00000104   0x00000008   Code   RO          288  * !!!main             __main.o(c_t.l)
    0x0000010c   0x0000003c   Code   RO          563    !!!scatter          __scatter.o(c_t.l)
    0x00000148   0x00000028   Code   RO          565    !!handler_copy      __scatter_copy.o(c_t.l)
    0x00000170   0x0000002c   Code   RO          567    !!handler_zi        __scatter_zi.o(c_t.l)
    0x0000019c   0x00000008   Ven    RO          432    .ARM.Collect$$libinit$$00000000  libinit.o(c_t.l)
    0x000001a4   0x00000006   Code   RO          432    .ARM.Collect$$libinit$$00000000  libinit.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          445    .ARM.Collect$$libinit$$00000006  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          447    .ARM.Collect$$libinit$$00000008  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          449    .ARM.Collect$$libinit$$0000000A  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          452    .ARM.Collect$$libinit$$0000000D  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          454    .ARM.Collect$$libinit$$0000000F  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          456    .ARM.Collect$$libinit$$00000011  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          458    .ARM.Collect$$libinit$$00000013  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          460    .ARM.Collect$$libinit$$00000015  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          462    .ARM.Collect$$libinit$$00000017  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          464    .ARM.Collect$$libinit$$00000019  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          466    .ARM.Collect$$libinit$$0000001B  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          468    .ARM.Collect$$libinit$$0000001D  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          470    .ARM.Collect$$libinit$$0000001F  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          472    .ARM.Collect$$libinit$$00000021  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          476    .ARM.Collect$$libinit$$00000028  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          478    .ARM.Collect$$libinit$$0000002A  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          480    .ARM.Collect$$libinit$$0000002C  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          482    .ARM.Collect$$libinit$$0000002E  libinit2.o(c_t.l)
    0x000001aa   0x0000000c   Code   RO          483    .ARM.Collect$$libinit$$0000002F  libinit2.o(c_t.l)
    0x000001b6   0x00000002   PAD
    0x000001b8   0x00000008   Ven    RO          521    .ARM.Collect$$libshutdown$$00000000  libshutdown.o(c_t.l)
    0x000001c0   0x00000004   Code   RO          521    .ARM.Collect$$libshutdown$$00000000  libshutdown.o(c_t.l)
    0x000001c4   0x00000000   Code   RO          548    .ARM.Collect$$libshutdown$$00000003  libshutdown2.o(c_t.l)
    0x000001c4   0x00000000   Code   RO          551    .ARM.Collect$$libshutdown$$00000006  libshutdown2.o(c_t.l)
    0x000001c4   0x00000000   Code   RO          554    .ARM.Collect$$libshutdown$$00000009  libshutdown2.o(c_t.l)
    0x000001c4   0x00000000   Code   RO          556    .ARM.Collect$$libshutdown$$0000000B  libshutdown2.o(c_t.l)
    0x000001c4   0x00000000   Code   RO          559    .ARM.Collect$$libshutdown$$0000000E  libshutdown2.o(c_t.l)
    0x000001c4   0x00000006   Code   RO          560    .ARM.Collect$$libshutdown$$0000000F  libshutdown2.o(c_t.l)
    0x000001ca   0x00000002   PAD
    0x000001cc   0x00000000   Code   RO          336    .ARM.Collect$$rtentry$$00000000  rtentry.o(c_t.l)
    0x000001cc   0x00000000   Code   RO          383    .ARM.Collect$$rtentry$$00000002  rtentry2.o(c_t.l)
    0x000001cc   0x00000008   Code   RO          398    .ARM.Collect$$rtentry$$00000004  rtentry4.o(c_t.l)
    0x000001d4   0x00000000   Code   RO          385    .ARM.Collect$$rtentry$$00000009  rtentry2.o(c_t.l)
    0x000001d4   0x00000004   Code   RO          386    .ARM.Collect$$rtentry$$0000000A  rtentry2.o(c_t.l)
    0x000001d8   0x00000000   Code   RO          388    .ARM.Collect$$rtentry$$0000000C  rtentry2.o(c_t.l)
    0x000001d8   0x00000028   Code   RO          389    .ARM.Collect$$rtentry$$0000000D  rtentry2.o(c_t.l)
    0x00000200   0x00000004   Ven    RO          435    .ARM.Collect$$rtexit$$00000000  rtexit.o(c_t.l)
    0x00000204   0x00000004   Code   RO          435    .ARM.Collect$$rtexit$$00000000  rtexit.o(c_t.l)
    0x00000208   0x00000000   Code   RO          489    .ARM.Collect$$rtexit$$00000002  rtexit2.o(c_t.l)
    0x00000208   0x00000004   Code   RO          490    .ARM.Collect$$rtexit$$00000003  rtexit2.o(c_t.l)
    0x0000020c   0x00000008   Code   RO          491    .ARM.Collect$$rtexit$$00000004  rtexit2.o(c_t.l)
    0x00000214   0x0000050c   Code   RO            1    .text               main.o
    0x00000720   0x00000110   Code   RO           79    .text               list.o
    0x00000830   0x00001be8   Code   RO          109    .text               tasks.o
    0x00002418   0x00000210   Code   RO          131    .text               heap_2.o
    0x00002628   0x000001fc   Code   RO          146    .text               port.o
    0x00002824   0x00000224   Code   RO          165    .text               spi.o
    0x00002a48   0x00000100   Code   RO          188    .text               pwm.o
    0x00002b48   0x00000420   Code   RO          203    .text               motion_control.o
    0x00002f68   0x00000578   Code   RO          218    .text               lcd.o
    0x000034e0   0x00000020   Code   RO          242    .text               startup.o
    0x00003500   0x000002fc   Code   RO          247    .text               adc.o
    0x000037fc   0x00000180   Code   RO          270    .text               aeabi_sdiv.o(c_t.l)
    0x0000397c   0x00000006   Code   RO          286    .text               heapauxi.o(c_t.l)
    0x00003982   0x00000002   PAD
    0x00003984   0x00000008   Ven    RO          342    .text               _rserrno.o(c_t.l)
    0x0000398c   0x0000001a   Code   RO          342    .text               _rserrno.o(c_t.l)
    0x000039a6   0x00000002   PAD
    0x000039a8   0x00000004   Ven    RO          405    .text               rt_errno_addr_intlibspace.o(c_t.l)
    0x000039ac   0x00000010   Code   RO          405    .text               rt_errno_addr_intlibspace.o(c_t.l)
    0x000039bc   0x0000000c   Code   RO          415    .text               libspace.o(c_t.l)
    0x000039c8   0x00000060   Code   RO          418    .text               sys_stackheap_outer.o(c_t.l)
    0x00003a28   0x0000000c   Code   RO          420    .text               exit.o(c_t.l)
    0x00003a34   0x00000018   Code   RO          486    .text               sys_exit.o(c_t.l)
    0x00003a4c   0x00000010   Code   RO          499    .text               rt_fp_status_addr_intlibspace.o(c_t.l)
    0x00003a5c   0x00000004   Code   RO          511    .text               use_no_semi.o(c_t.l)
    0x00003a60   0x0000001c   Code   RO          271    .text_udiv          aeabi_sdiv.o(c_t.l)
    0x00003a7c   0x0000018c   Code   RO          161    PORT_ASM            portasm.o
    0x00003c08   0x00000100   Code   RO          371    i.__kernel_poly     poly.o(m_ts.l)
    0x00003d08   0x00000f24   Code   RO          327    i.pow               pow.o(m_ts.l)
    0x00004c2c   0x00000004   PAD
    0x00004c30   0x00000050   Code   RO          375    i.sqrt              sqrt.o(m_ts.l)
    0x00004c80   0x000000ac   Code   RO          290    x$fpl$d2f           d2f.o(fz_ts.l)
    0x00004d2c   0x000001d4   Code   RO          292    x$fpl$dadd          daddsub_noclz.o(fz_ts.l)
    0x00004f00   0x00000010   Code   RO          346    x$fpl$dcheck        dcheck.o(fz_ts.l)
    0x00004f10   0x00000010   Code   RO          348    x$fpl$dcheck1       dcheck1.o(fz_ts.l)
    0x00004f20   0x00000080   Code   RO          407    x$fpl$dcmpinfnan    dcmpin.o(fz_ts.l)
    0x00004fa0   0x0000045c   Code   RO          299    x$fpl$ddiv          ddiv.o(fz_ts.l)
    0x000053fc   0x000000b0   Code   RO          302    x$fpl$dfix          dfix.o(fz_ts.l)
    0x000054ac   0x00000058   Code   RO          307    x$fpl$dflt          dflt_noclz.o(fz_ts.l)
    0x00005504   0x0000000c   Code   RO          306    x$fpl$dfltu         dflt_noclz.o(fz_ts.l)
    0x00005510   0x00000088   Code   RO          409    x$fpl$dleqf         dleqf.o(fz_ts.l)
    0x00005598   0x000001dc   Code   RO          310    x$fpl$dmul          dmul.o(fz_ts.l)
    0x00005774   0x000000a0   Code   RO          350    x$fpl$drleqf        drleqf.o(fz_ts.l)
    0x00005814   0x00000018   Code   RO          293    x$fpl$drsb          daddsub_noclz.o(fz_ts.l)
    0x0000582c   0x00000188   Code   RO          411    x$fpl$dsqrt         dsqrt.o(fz_ts.l)
    0x000059b4   0x00000248   Code   RO          294    x$fpl$dsub          daddsub_noclz.o(fz_ts.l)
    0x00005bfc   0x00000118   Code   RO          352    x$fpl$dunder        dunder.o(fz_ts.l)
    0x00005d14   0x00000064   Code   RO          312    x$fpl$f2d           f2d.o(fz_ts.l)
    0x00005d78   0x0000000c   Code   RO          354    x$fpl$fcheck1       fcheck1.o(fz_ts.l)
    0x00005d84   0x00000074   Code   RO          314    x$fpl$ffix          ffix.o(fz_ts.l)
    0x00005df8   0x00000060   Code   RO          318    x$fpl$ffixu         ffixu.o(fz_ts.l)
    0x00005e58   0x0000005c   Code   RO          323    x$fpl$fflt          fflt_noclz.o(fz_ts.l)
    0x00005eb4   0x00000008   Code   RO          322    x$fpl$ffltu         fflt_noclz.o(fz_ts.l)
    0x00005ebc   0x00000004   Ven    RO          484    x$fpl$fpinit        fpinit.o(fz_ts.l)
    0x00005ec0   0x00000018   Code   RO          484    x$fpl$fpinit        fpinit.o(fz_ts.l)
    0x00005ed8   0x00000094   Code   RO          356    x$fpl$funder        funder.o(fz_ts.l)
    0x00005f6c   0x00000074   Code   RO          413    x$fpl$retnan        retnan.o(fz_ts.l)
    0x00005fe0   0x0000006c   Code   RO          361    x$fpl$scalbn        scalbn.o(fz_ts.l)
    0x0000604c   0x0000003c   Code   RO          433    x$fpl$trapveneer    trapv.o(fz_ts.l)
    0x00006088   0x00000000   Code   RO          366    x$fpl$usenofp       usenofp.o(fz_ts.l)
    0x00006088   0x00000088   Data   RO          328    .constdata          pow.o(m_ts.l)
    0x00006110   0x00000008   Data   RO          373    .constdata          qnan.o(m_ts.l)
    0x00006118   0x00000020   Data   RO          561    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x40000000, Size: 0x00003c30, Max: 0x00008000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x40000000   0x00000009   Data   RW            3    .data               main.o
    0x40000009   0x00000003   PAD
    0x4000000c   0x0000003c   Data   RW          111    .data               tasks.o
    0x40000048   0x00000018   Data   RW          133    .data               heap_2.o
    0x40000060   0x00000004   Data   RW          147    .data               port.o
    0x40000064   0x00000008   Data   RW          204    .data               motion_control.o
    0x4000006c   0x00000011   Zero   RW            2    .bss                main.o
    0x4000007d   0x00000003   PAD
    0x40000080   0x0000012c   Zero   RW          110    .bss                tasks.o
    0x400001ac   0x00003400   Zero   RW          132    .bss                heap_2.o
    0x400035ac   0x00000060   Zero   RW          416    .bss                libspace.o(c_t.l)
    0x4000360c   0x00000004   PAD
    0x40003610   0x00000000   Zero   RW          240    HEAP                startup.o
    0x40003610   0x00000620   Zero   RW          239    STACK               startup.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       764         72          0          0          0       1761   adc.o
       528         24          0         24      13312       3028   heap_2.o
      1400          8          0          0          0       2782   lcd.o
       272          0          0          0          0       1706   list.o
      1292         52          0          9         17      18293   main.o
      1056         32          0          8          0       4480   motion_control.o
       508         36          0          4          0       2703   port.o
       396         24          0          0          0        356   portasm.o
       256          8          0          0          0        995   pwm.o
       548         16          0          0          0       2410   spi.o
       292         60          0          0       1568        436   startup.o
      7144         96          0         60        300      20375   tasks.o

    ----------------------------------------------------------------------
     14456        428         32        108      15200      59325   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         0          0          0          3          3          3   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
        60          8          0          0          0          0   __scatter.o
        40          0          0          0          0          0   __scatter_copy.o
        44          0          0          0          0          0   __scatter_zi.o
        34          0          0          0          0        100   _rserrno.o
       412          0          0          0          0        148   aeabi_sdiv.o
       172          4          0          0          0         68   d2f.o
      1076         28          0          0          0        328   daddsub_noclz.o
        16          4          0          0          0         68   dcheck.o
        16          4          0          0          0         68   dcheck1.o
       128          0          0          0          0         84   dcmpin.o
      1116        272          0          0          0        212   ddiv.o
       176          4          0          0          0         76   dfix.o
       100          0          0          0          0        136   dflt_noclz.o
       136          4          0          0          0         68   dleqf.o
       476         16          0          0          0        128   dmul.o
       160          4          0          0          0         68   drleqf.o
       392          8          0          0          0        152   dsqrt.o
       280          0          0          0          0         92   dunder.o
        12          0          0          0          0         60   exit.o
       100          4          0          0          0         68   f2d.o
        12          4          0          0          0         68   fcheck1.o
       116          4          0          0          0         68   ffix.o
        96          4          0          0          0         68   ffixu.o
       100          0          0          0          0        136   fflt_noclz.o
        28          0          0          0          0         80   fpinit.o
       148          0          0          0          0         84   funder.o
         6          0          0          0          0        132   heapauxi.o
        14          0          0          0          0          0   libinit.o
        12          0          0          0          0          0   libinit2.o
        12          0          0          0          0          0   libshutdown.o
         6          0          0          0          0          0   libshutdown2.o
        12          4          0          0         96         68   libspace.o
       256          0          0          0          0        112   poly.o
      3876        232        136          0          0        252   pow.o
         0          0          8          0          0          0   qnan.o
       116          0          0          0          0         68   retnan.o
        20          4          0          0          0         68   rt_errno_addr_intlibspace.o
        16          4          0          0          0         68   rt_fp_status_addr_intlibspace.o
         0          0          0          0          0          0   rtentry.o
        44          4          0          0          0          0   rtentry2.o
         8          0          0          0          0          0   rtentry4.o
         8          0          0          0          0          0   rtexit.o
        12          0          0          0          0          0   rtexit2.o
       108          0          0          0          0         68   scalbn.o
        80         16          0          0          0        100   sqrt.o
        24          8          0          0          0         68   sys_exit.o
        96          0          0          0          0         80   sys_stackheap_outer.o
        60          0          0          0          0         68   trapv.o
         4          0          0          0          0         68   use_no_semi.o
         0          0          0          0          0          0   usenofp.o

    ----------------------------------------------------------------------
     10256        648        144          0        100       3716   Library Totals
        12          4          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       904         32          0          0         96        928   c_t.l
      5128        364          0          0          0       2324   fz_ts.l
      4212        248        144          0          0        464   m_ts.l

    ----------------------------------------------------------------------
     10256        648        144          0        100       3716   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     24712       1076        176        108      15300      59860   Grand Totals
     24712       1076        176        108      15300      59860   ELF Image Totals
     24712       1076        176        108          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                24888 (  24.30kB)
    Total RW  Size (RW Data + ZI Data)             15408 (  15.05kB)
    Total ROM Size (Code + RO Data + RW Data)      24996 (  24.41kB)

==============================================================================

