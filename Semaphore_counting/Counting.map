ARM Linker, RVCT4.0 [Build 728] [Evaluation]

==============================================================================

Section Cross References

    main.o(.text) refers to lcd.o(.text) for Init_LCD_Pin
    main.o(.text) refers to queue.o(.text) for xQueueGenericReceive
    main.o(.text) refers to aeabi_sdiv.o(.text) for __aeabi_idivmod
    main.o(.text) refers to tasks.o(.text) for vTaskDelay
    main.o(.text) refers to main.o(.data) for Temp
    main.o(.text) refers to main.o(.bss) for forks_avail
    startup.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(RESET) refers to portasm.o(PORT_ASM) for vPortYieldProcessor
    startup.o(RESET) refers to startup.o(STACK) for Stack_Top
    startup.o(RESET) refers to __main.o(!!!main) for __main
    startup.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(.text) refers to startup.o(HEAP) for Heap_Mem
    startup.o(.text) refers to startup.o(STACK) for Stack_Mem
    tasks.o(.text) refers to list.o(.text) for vListInitialise
    tasks.o(.text) refers to port.o(.text) for vPortEnterCritical
    tasks.o(.text) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(.text) refers to heap_2.o(.text) for pvPortMalloc
    tasks.o(.text) refers to tasks.o(.bss) for .bss
    tasks.o(.text) refers to tasks.o(.data) for .data
    queue.o(.text) refers to port.o(.text) for vPortEnterCritical
    queue.o(.text) refers to tasks.o(.text) for xTaskRemoveFromEventList
    queue.o(.text) refers to portasm.o(PORT_ASM) for vPortYield
    queue.o(.text) refers to list.o(.text) for vListInitialise
    queue.o(.text) refers to heap_2.o(.text) for pvPortMalloc
    queue.o(.text) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    port.o(.text) refers to portasm.o(PORT_ASM) for vPortStartFirstTask
    port.o(.text) refers to port.o(.data) for ulCriticalNesting
    portasm.o(PORT_ASM) refers to tasks.o(.data) for pxCurrentTCB
    portasm.o(PORT_ASM) refers to port.o(.data) for ulCriticalNesting
    portasm.o(PORT_ASM) refers to tasks.o(.text) for vTaskSwitchContext
    lcd.o(.text) refers to strcpy.o(.text) for strcpy
    lcd.o(.text) refers to queue.o(.text) for xQueueGenericSend
    lcd.o(.text) refers to aeabi_sdiv.o(.text_udiv) for __aeabi_uidivmod
    lcd.o(.text) refers to lcd.o(.data) for .data
    heap_2.o(.text) refers to tasks.o(.text) for vTaskSuspendAll
    heap_2.o(.text) refers to heap_2.o(.bss) for .bss
    heap_2.o(.text) refers to heap_2.o(.data) for .data
    rt_memcpy.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_sdiv.o(.text_udiv) refers to aeabi_sdiv.o(.text) for __arm_div4
    aeabi_sdiv_div0.o(.text_udiv) refers to aeabi_sdiv_div0.o(.text) for __arm_div4
    __main.o(!!!main) refers to rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    rtentry.o(.ARM.exidx) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    rtentry.o(.ARM.exidx) refers (Special) to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rtentry.o(.ARM.exidx) refers to rtentry.o(.ARM.Collect$$rtentry$$00000000) for .ARM.Collect$$rtentry$$00000000
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text) for main
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for .ARM.Collect$$rtentry$$00000002
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for .ARM.Collect$$rtentry$$00000009
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for .ARM.Collect$$rtentry$$0000000C
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    rtentry4.o(.ARM.exidx) refers to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002A) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000028) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000D) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000F) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002F) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000008) for __rt_lib_init_user_alloc_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$0000000C) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$0000000E) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000B) for .ARM.Collect$$libinit$$0000000B
    libinit2.o(.ARM.Collect$$libinit$$00000022) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000023) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    fpinit.o(x$fpl$fpinit) refers to rt_fp_status_addr_intlibspace.o(.text) for __rt_fp_status_addr
    sys_exit.o(.text) refers to use_no_semi.o(.text) for __I$use$semihosting
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for .ARM.Collect$$rtexit$$00000002
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    rt_fp_status_addr.o(.text) refers to rt_fp_status_addr.o(.bss) for __rt_fp_status_addr_data
    rt_fp_status_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    __raise.o(.text) refers to __raise.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000006) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000009) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Adding Veneers to the image

    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_init' from rtentry2.o(.ARM.Collect$$rtentry$$0000000A).
    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_shutdown' from rtexit2.o(.ARM.Collect$$rtexit$$00000003).
    Adding TA veneer (4 bytes, Inline) for call to '__rt_exit' from exit.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to 'strcpy' from lcd.o(.text).
    Adding TA veneer (4 bytes, Inline) for call to '_fp_init' from libinit.o(.ARM.Collect$$libinit$$00000000).

5 Veneer(s) (total 32 bytes) added to the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      260  startup.o(RESET)
    ../../angel/boardlib.s                   0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../../angel/boardlib.s                   0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../../angel/boardlib.s                   0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../../angel/boardlib.s                   0x00000000   Number         0  boardshut.o ABSOLUTE
    ../../angel/handlers.s                   0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../../angel/handlers.s                   0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../../angel/kernel.s                     0x00000000   Number         0  rtentry.o ABSOLUTE
    ../../angel/kernel.s                     0x00000000   Number         0  rtexit.o ABSOLUTE
    ../../angel/kernel.s                     0x00000000   Number         0  rtentry4.o ABSOLUTE
    ../../angel/kernel.s                     0x00000000   Number         0  rtentry2.o ABSOLUTE
    ../../angel/kernel.s                     0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../../angel/rt.s                         0x00000000   Number         0  rt_fp_status_addr_intlibspace.o ABSOLUTE
    ../../angel/rt.s                         0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../../angel/rt.s                         0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../../angel/rt.s                         0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../../angel/rt.s                         0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../../angel/rt.s                         0x00000000   Number         0  rt_fp_status_addr.o ABSOLUTE
    ../../angel/scatter.s                    0x00000000   Number         0  __scatter.o ABSOLUTE
    ../../angel/startup.s                    0x00000000   Number         0  __main.o ABSOLUTE
    ../../angel/sys.s                        0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../../angel/sys.s                        0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../../angel/sys.s                        0x00000000   Number         0  libspace.o ABSOLUTE
    ../../angel/sys.s                        0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../../angel/sysapp.c                     0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../../angel/sysapp.c                     0x00000000   Number         0  sys_command.o ABSOLUTE
    ../../armsys.c                           0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../../armsys.c                           0x00000000   Number         0  no_argv.o ABSOLUTE
    ../../armsys.c                           0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../../armsys.c                           0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../../division.s                         0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../../division.s                         0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../../divrt.s                            0x00000000   Number         0  divrt_7tdmi.o ABSOLUTE
    ../../divrt.s                            0x00000000   Number         0  divrt_7tdmi_div0.o ABSOLUTE
    ../../fpinit.s                           0x00000000   Number         0  fpinit.o ABSOLUTE
    ../../heapalloc.c                        0x00000000   Number         0  hrguard.o ABSOLUTE
    ../../heapaux.c                          0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../../libinit.s                          0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../../libinit.s                          0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../../libinit.s                          0x00000000   Number         0  libinit2.o ABSOLUTE
    ../../libinit.s                          0x00000000   Number         0  libinit.o ABSOLUTE
    ../../memcpset.s                         0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../../memcpset.s                         0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  __raise.o ABSOLUTE
    ../../signal.c                           0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../../signal.s                           0x00000000   Number         0  defsig.o ABSOLUTE
    ../../stdlib.c                           0x00000000   Number         0  exit.o ABSOLUTE
    ../../string.c                           0x00000000   Number         0  strcpy.o ABSOLUTE
    LCD.c                                    0x00000000   Number         0  lcd.o ABSOLUTE
    S:\FreeRTOSv9.0.0\FreeRTOS\Source\list.c 0x00000000   Number         0  list.o ABSOLUTE
    S:\FreeRTOSv9.0.0\FreeRTOS\Source\portable\MemMang\heap_2.c 0x00000000   Number         0  heap_2.o ABSOLUTE
    S:\FreeRTOSv9.0.0\FreeRTOS\Source\portable\RVDS\ARM7_LPC21xx\port.c 0x00000000   Number         0  port.o ABSOLUTE
    S:\FreeRTOSv9.0.0\FreeRTOS\Source\portable\RVDS\ARM7_LPC21xx\portASM.s 0x00000000   Number         0  portasm.o ABSOLUTE
    S:\FreeRTOSv9.0.0\FreeRTOS\Source\queue.c 0x00000000   Number         0  queue.o ABSOLUTE
    S:\FreeRTOSv9.0.0\FreeRTOS\Source\tasks.c 0x00000000   Number         0  tasks.o ABSOLUTE
    Startup.s                                0x00000000   Number         0  startup.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    Undef_Handler                            0x00000040   ARM Code       4  startup.o(RESET)
    PAbt_Handler                             0x00000048   ARM Code       4  startup.o(RESET)
    DAbt_Handler                             0x0000004c   ARM Code       4  startup.o(RESET)
    IRQ_Handler                              0x00000050   ARM Code       4  startup.o(RESET)
    FIQ_Handler                              0x00000054   ARM Code       4  startup.o(RESET)
    !!!main                                  0x00000104   Section        8  __main.o(!!!main)
    !!!scatter                               0x0000010c   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x00000148   Section       40  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x00000170   Section       44  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x000001a4   Section        6  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000006          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$00000008          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000008)
    .ARM.Collect$$libinit$$0000000A          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000D          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000D)
    .ARM.Collect$$libinit$$0000000F          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    .ARM.Collect$$libinit$$00000011          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000028          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000028)
    .ARM.Collect$$libinit$$0000002A          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002A)
    .ARM.Collect$$libinit$$0000002C          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x000001aa   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$0000002F          0x000001aa   Section       12  libinit2.o(.ARM.Collect$$libinit$$0000002F)
    .ARM.Collect$$libshutdown$$00000000      0x000001c0   Section        4  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000003      0x000001c4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    .ARM.Collect$$libshutdown$$00000006      0x000001c4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    .ARM.Collect$$libshutdown$$00000009      0x000001c4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    .ARM.Collect$$libshutdown$$0000000B      0x000001c4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B)
    .ARM.Collect$$libshutdown$$0000000E      0x000001c4   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    .ARM.Collect$$libshutdown$$0000000F      0x000001c4   Section        6  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$rtentry$$00000000          0x000001cc   Section        0  rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x000001cc   Section        0  rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x000001cc   Section        8  rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x000001d4   Section        0  rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x000001d4   Section        4  rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x000001d8   Section        0  rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x000001d8   Section       40  rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x00000204   Section        4  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000208   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000208   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x0000020c   Section        8  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x00000214   Section        0  main.o(.text)
    .text                                    0x000008d4   Section       32  startup.o(.text)
    .text                                    0x000008f4   Section        0  tasks.o(.text)
    prvInitialiseTaskLists                   0x000008f4   ARM Code     112  tasks.o(.text)
    prvAddNewTaskToReadyList                 0x00000964   ARM Code     260  tasks.o(.text)
    prvInitialiseNewTask                     0x00000a68   ARM Code     240  tasks.o(.text)
    prvResetNextTaskUnblockTime              0x00000c04   ARM Code      88  tasks.o(.text)
    prvDeleteTCB                             0x00000c5c   ARM Code      32  tasks.o(.text)
    prvAddCurrentTaskToDelayedList           0x00001048   ARM Code     184  tasks.o(.text)
    prvTaskIsTaskSuspended                   0x00001524   ARM Code     128  tasks.o(.text)
    prvCheckTasksWaitingTermination          0x0000173c   ARM Code     160  tasks.o(.text)
    prvIdleTask                              0x000017dc   ARM Code      36  tasks.o(.text)
    .text                                    0x00002304   Section        0  list.o(.text)
    .text                                    0x00002414   Section        0  queue.o(.text)
    prvInitialiseNewQueue                    0x000024e8   ARM Code      72  queue.o(.text)
    prvUnlockQueue                           0x00002590   ARM Code     232  queue.o(.text)
    prvIsQueueFull                           0x00002678   ARM Code      56  queue.o(.text)
    prvCopyDataToQueue                       0x000026b0   ARM Code     244  queue.o(.text)
    prvInitialiseMutex                       0x00002920   ARM Code      60  queue.o(.text)
    prvIsQueueEmpty                          0x00002b38   ARM Code      52  queue.o(.text)
    prvCopyDataFromQueue                     0x00002b6c   ARM Code      88  queue.o(.text)
    .text                                    0x00002f6c   Section        0  port.o(.text)
    prvSetupTimerInterrupt                   0x0000305c   ARM Code     100  port.o(.text)
    .text                                    0x00003168   Section        0  lcd.o(.text)
    .text                                    0x00003780   Section        0  heap_2.o(.text)
    prvHeapInit                              0x00003780   ARM Code      72  heap_2.o(.text)
    .text                                    0x00003998   Section        0  strcpy.o(.text)
    .text                                    0x000039e8   Section      212  rt_memcpy.o(.text)
    .text                                    0x00003abc   Section      384  aeabi_sdiv.o(.text)
    __arm_div8                               0x00003ae8   ARM Code       0  aeabi_sdiv.o(.text)
    __arm_div4                               0x00003b18   ARM Code       0  aeabi_sdiv.o(.text)
    __arm_div_large                          0x00003b6c   ARM Code       0  aeabi_sdiv.o(.text)
    .text                                    0x00003c3c   Section        0  heapauxi.o(.text)
    .text                                    0x00003c44   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x00003ca8   Section       96  sys_stackheap_outer.o(.text)
    .text                                    0x00003d08   Section        0  exit.o(.text)
    .text                                    0x00003d14   Section       12  libspace.o(.text)
    .text                                    0x00003d20   Section       24  sys_exit.o(.text)
    .text                                    0x00003d38   Section       16  rt_fp_status_addr_intlibspace.o(.text)
    .text                                    0x00003d48   Section        4  use_no_semi.o(.text)
    .text_udiv                               0x00003d4c   Section       28  aeabi_sdiv.o(.text_udiv)
    PORT_ASM                                 0x00003d68   Section      396  portasm.o(PORT_ASM)
    x$fpl$fpinit                             0x00003ef8   Section       24  fpinit.o(x$fpl$fpinit)
    .data                                    0x40000000   Section       16  main.o(.data)
    .data                                    0x40000010   Section       60  tasks.o(.data)
    uxDeletedTasksWaitingCleanUp             0x40000014   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x40000018   Data           4  tasks.o(.data)
    xTickCount                               0x4000001c   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x40000020   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x40000024   Data           4  tasks.o(.data)
    uxPendedTicks                            0x40000028   Data           4  tasks.o(.data)
    xYieldPending                            0x4000002c   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x40000030   Data           4  tasks.o(.data)
    uxTaskNumber                             0x40000034   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x40000038   Data           4  tasks.o(.data)
    xIdleTaskHandle                          0x4000003c   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x40000040   Data           4  tasks.o(.data)
    pxDelayedTaskList                        0x40000044   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x40000048   Data           4  tasks.o(.data)
    .data                                    0x4000004c   Section        4  port.o(.data)
    .data                                    0x40000050   Section        8  lcd.o(.data)
    Queue_Handle_Data                        0x40000050   Data           4  lcd.o(.data)
    Queue_Handle_String                      0x40000054   Data           4  lcd.o(.data)
    .data                                    0x40000058   Section       24  heap_2.o(.data)
    xFreeBytesRemaining                      0x40000058   Data           4  heap_2.o(.data)
    xHeapHasBeenInitialised                  0x4000005c   Data           4  heap_2.o(.data)
    xStart                                   0x40000060   Data           8  heap_2.o(.data)
    xEnd                                     0x40000068   Data           8  heap_2.o(.data)
    .bss                                     0x40000070   Section       20  main.o(.bss)
    .bss                                     0x40000084   Section      300  tasks.o(.bss)
    pxReadyTasksLists                        0x40000084   Data         200  tasks.o(.bss)
    xDelayedTaskList1                        0x4000014c   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x40000160   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x40000174   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x40000188   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x4000019c   Data          20  tasks.o(.bss)
    .bss                                     0x400001b0   Section    13312  heap_2.o(.bss)
    ucHeap                                   0x400001b0   Data       13312  heap_2.o(.bss)
    .bss                                     0x400035b0   Section       96  libspace.o(.bss)
    HEAP                                     0x40003610   Section        0  startup.o(HEAP)
    STACK                                    0x40003610   Section     1568  startup.o(STACK)
    Heap_Mem                                 0x40003610   Data           0  startup.o(HEAP)
    Stack_Mem                                0x40003610   Data        1568  startup.o(STACK)
    Stack_Top                                0x40003c30   Data           0  startup.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv1$ARM_ISAv4$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    Reset_Handler                            0x00000058   ARM Code       0  startup.o(RESET)
    __main                                   0x00000104   ARM Code       8  __main.o(!!!main)
    __scatterload                            0x0000010c   ARM Code       0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x0000010c   ARM Code      52  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000120   ARM Code       0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x00000148   ARM Code      40  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x00000170   ARM Code      44  __scatter_zi.o(!!handler_zi)
    Inline ARM to Thumb Veneer to __rt_lib_init 0x0000019c   ARM Code       8  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init                            0x000001a5   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002A)
    __rt_lib_init_argv_1                     0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000028)
    __rt_lib_init_atexit_1                   0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_clock_1                    0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_cpp_1                      0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_exceptions_1               0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_fp_trap_1                  0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_getenv_1                   0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_heap_1                     0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_lc_collate_1               0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000D)
    __rt_lib_init_lc_ctype_1                 0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    __rt_lib_init_lc_monetary_1              0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_numeric_1               0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_time_1                  0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_rand_1                     0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_return                     0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002F)
    __rt_lib_init_signal_1                   0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_stdio_1                    0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_user_alloc_1               0x000001ab   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000008)
    Inline ARM to Thumb Veneer to __rt_lib_shutdown 0x000001b8   ARM Code       8  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown                        0x000001c1   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_fp_trap_1              0x000001c5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    __rt_lib_shutdown_heap_1                 0x000001c5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    __rt_lib_shutdown_return                 0x000001c5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_signal_1               0x000001c5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    __rt_lib_shutdown_stdio_1                0x000001c5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    __rt_lib_shutdown_user_alloc_1           0x000001c5   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B)
    __rt_entry                               0x000001cc   ARM Code       0  rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x000001cc   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x000001cc   ARM Code       0  rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x000001d4   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x000001d4   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x000001d8   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x000001d8   ARM Code       0  rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    Inline Thumb to ARM Veneer to __rt_exit  0x00000201   Thumb Code     4  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit                                0x00000204   ARM Code       0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000208   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000208   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x0000020c   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    UART0_SendByte                           0x00000214   ARM Code      32  main.o(.text)
    IRQ_UART0                                0x00000234   ARM Code      48  main.o(.text)
    Init_UART0                               0x00000264   ARM Code     124  main.o(.text)
    UART0_SendStr                            0x000002e0   ARM Code      72  main.o(.text)
    Init_Ports                               0x00000328   ARM Code      16  main.o(.text)
    Init_Peripherals                         0x00000338   ARM Code      20  main.o(.text)
    DelaymSec                                0x0000034c   ARM Code      44  main.o(.text)
    vfork                                    0x00000378   ARM Code     908  main.o(.text)
    main                                     0x00000704   ARM Code     284  main.o(.text)
    __user_initial_stackheap                 0x000008d4   ARM Code       0  startup.o(.text)
    xTaskCreate                              0x00000b58   ARM Code     172  tasks.o(.text)
    vTaskDelete                              0x00000c7c   ARM Code     220  tasks.o(.text)
    xTaskIncrementTick                       0x00000d58   ARM Code     404  tasks.o(.text)
    xTaskResumeAll                           0x00000eec   ARM Code     348  tasks.o(.text)
    vTaskSuspendAll                          0x00001100   ARM Code      24  tasks.o(.text)
    vTaskDelayUntil                          0x00001118   ARM Code     152  tasks.o(.text)
    vTaskDelay                               0x000011b0   ARM Code      64  tasks.o(.text)
    uxTaskPriorityGet                        0x000011f0   ARM Code      60  tasks.o(.text)
    uxTaskPriorityGetFromISR                 0x0000122c   ARM Code      44  tasks.o(.text)
    vTaskPrioritySet                         0x00001258   ARM Code     328  tasks.o(.text)
    vTaskSwitchContext                       0x000013a0   ARM Code     184  tasks.o(.text)
    vTaskSuspend                             0x00001458   ARM Code     204  tasks.o(.text)
    vTaskResume                              0x000015a4   ARM Code     160  tasks.o(.text)
    xTaskResumeFromISR                       0x00001644   ARM Code     248  tasks.o(.text)
    vTaskStartScheduler                      0x00001800   ARM Code     108  tasks.o(.text)
    vTaskEndScheduler                        0x0000186c   ARM Code      40  tasks.o(.text)
    xTaskGetTickCount                        0x00001894   ARM Code      32  tasks.o(.text)
    xTaskGetTickCountFromISR                 0x000018b4   ARM Code      16  tasks.o(.text)
    uxTaskGetNumberOfTasks                   0x000018c4   ARM Code      12  tasks.o(.text)
    pcTaskGetName                            0x000018d0   ARM Code      40  tasks.o(.text)
    vTaskPlaceOnEventList                    0x000018f8   ARM Code      52  tasks.o(.text)
    vTaskPlaceOnUnorderedEventList           0x0000192c   ARM Code      72  tasks.o(.text)
    xTaskRemoveFromEventList                 0x00001974   ARM Code     196  tasks.o(.text)
    xTaskRemoveFromUnorderedEventList        0x00001a38   ARM Code     156  tasks.o(.text)
    vTaskSetTimeOutState                     0x00001ad4   ARM Code      28  tasks.o(.text)
    xTaskCheckForTimeOut                     0x00001af0   ARM Code     160  tasks.o(.text)
    vTaskMissedYield                         0x00001b90   ARM Code      16  tasks.o(.text)
    xTaskGetCurrentTaskHandle                0x00001ba0   ARM Code      12  tasks.o(.text)
    vTaskPriorityInherit                     0x00001bac   ARM Code     232  tasks.o(.text)
    xTaskPriorityDisinherit                  0x00001c94   ARM Code     164  tasks.o(.text)
    uxTaskResetEventItemValue                0x00001d38   ARM Code      44  tasks.o(.text)
    pvTaskIncrementMutexHeldCount            0x00001d64   ARM Code      52  tasks.o(.text)
    ulTaskNotifyTake                         0x00001d98   ARM Code     180  tasks.o(.text)
    xTaskNotifyWait                          0x00001e4c   ARM Code     228  tasks.o(.text)
    xTaskGenericNotify                       0x00001f30   ARM Code     300  tasks.o(.text)
    xTaskGenericNotifyFromISR                0x0000205c   ARM Code     364  tasks.o(.text)
    vTaskNotifyGiveFromISR                   0x000021c8   ARM Code     224  tasks.o(.text)
    xTaskNotifyStateClear                    0x000022a8   ARM Code      88  tasks.o(.text)
    vListInitialise                          0x00002304   ARM Code      44  list.o(.text)
    vListInitialiseItem                      0x00002330   ARM Code      12  list.o(.text)
    vListInsertEnd                           0x0000233c   ARM Code      48  list.o(.text)
    vListInsert                              0x0000236c   ARM Code      92  list.o(.text)
    uxListRemove                             0x000023c8   ARM Code      76  list.o(.text)
    xQueueGenericReset                       0x00002414   ARM Code     212  queue.o(.text)
    xQueueGenericCreate                      0x00002530   ARM Code      96  queue.o(.text)
    xQueueGenericSend                        0x000027a4   ARM Code     380  queue.o(.text)
    xQueueCreateMutex                        0x0000295c   ARM Code      56  queue.o(.text)
    xQueueCreateCountingSemaphore            0x00002994   ARM Code      56  queue.o(.text)
    xQueueGenericSendFromISR                 0x000029cc   ARM Code     192  queue.o(.text)
    xQueueGiveFromISR                        0x00002a8c   ARM Code     172  queue.o(.text)
    xQueueGenericReceive                     0x00002bc4   ARM Code     488  queue.o(.text)
    xQueueReceiveFromISR                     0x00002dac   ARM Code     180  queue.o(.text)
    xQueuePeekFromISR                        0x00002e60   ARM Code      80  queue.o(.text)
    uxQueueMessagesWaiting                   0x00002eb0   ARM Code      32  queue.o(.text)
    uxQueueSpacesAvailable                   0x00002ed0   ARM Code      48  queue.o(.text)
    uxQueueMessagesWaitingFromISR            0x00002f00   ARM Code      12  queue.o(.text)
    vQueueDelete                             0x00002f0c   ARM Code      28  queue.o(.text)
    xQueueIsQueueEmptyFromISR                0x00002f28   ARM Code      32  queue.o(.text)
    xQueueIsQueueFullFromISR                 0x00002f48   ARM Code      36  queue.o(.text)
    pxPortInitialiseStack                    0x00002f6c   ARM Code     240  port.o(.text)
    xPortStartScheduler                      0x000030c0   ARM Code      24  port.o(.text)
    vPortEndScheduler                        0x000030d8   ARM Code       4  port.o(.text)
    vPortEnterCritical                       0x000030dc   ARM Code      36  port.o(.text)
    vPortExitCritical                        0x00003100   ARM Code      68  port.o(.text)
    print_LCD_String_using_queue             0x00003168   ARM Code      84  lcd.o(.text)
    print_LCD_Data_using_queue               0x000031bc   ARM Code      76  lcd.o(.text)
    Delay                                    0x00003208   ARM Code      40  lcd.o(.text)
    LCD_Write                                0x00003230   ARM Code      40  lcd.o(.text)
    LCD_Data                                 0x00003258   ARM Code     128  lcd.o(.text)
    LCD_Command                              0x000032d8   ARM Code     128  lcd.o(.text)
    LCD_Cursor                               0x00003358   ARM Code      84  lcd.o(.text)
    LCD_Home                                 0x000033ac   ARM Code      20  lcd.o(.text)
    LCD_Print                                0x000033c0   ARM Code     364  lcd.o(.text)
    vLCD_Display_Data                        0x0000352c   ARM Code      64  lcd.o(.text)
    LCD_String                               0x0000356c   ARM Code      44  lcd.o(.text)
    LCD_Print_String                         0x00003598   ARM Code      44  lcd.o(.text)
    vLCD_Display_String                      0x000035c4   ARM Code      60  lcd.o(.text)
    Init_LCD_Pin                             0x00003600   ARM Code      28  lcd.o(.text)
    LCD_4Bit_Mode                            0x0000361c   ARM Code     232  lcd.o(.text)
    LCD_Init                                 0x00003704   ARM Code     108  lcd.o(.text)
    pvPortMalloc                             0x000037c8   ARM Code     300  heap_2.o(.text)
    vPortFree                                0x000038f4   ARM Code     116  heap_2.o(.text)
    xPortGetFreeHeapSize                     0x00003968   ARM Code      12  heap_2.o(.text)
    vPortInitialiseBlocks                    0x00003974   ARM Code       4  heap_2.o(.text)
    Inline ARM to Thumb Veneer to strcpy     0x00003990   ARM Code       8  strcpy.o(.text)
    strcpy                                   0x00003999   Thumb Code    74  strcpy.o(.text)
    __aeabi_memcpy                           0x000039e8   ARM Code       0  rt_memcpy.o(.text)
    __rt_memcpy                              0x000039e8   ARM Code     212  rt_memcpy.o(.text)
    _memcpy_lastbytes                        0x00003a9c   ARM Code       0  rt_memcpy.o(.text)
    __aeabi_idiv                             0x00003abc   ARM Code       0  aeabi_sdiv.o(.text)
    __aeabi_idivmod                          0x00003abc   ARM Code     384  aeabi_sdiv.o(.text)
    __use_two_region_memory                  0x00003c3d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x00003c3f   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x00003c41   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x00003c44   ARM Code       0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x00003c44   ARM Code       0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x00003c44   ARM Code     100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x00003c90   ARM Code       0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x00003ca8   ARM Code      96  sys_stackheap_outer.o(.text)
    exit                                     0x00003d09   Thumb Code    12  exit.o(.text)
    __user_libspace                          0x00003d14   ARM Code      12  libspace.o(.text)
    __user_perproc_libspace                  0x00003d14   ARM Code       0  libspace.o(.text)
    __user_perthread_libspace                0x00003d14   ARM Code       0  libspace.o(.text)
    _sys_exit                                0x00003d20   ARM Code      20  sys_exit.o(.text)
    __rt_fp_status_addr                      0x00003d38   ARM Code      16  rt_fp_status_addr_intlibspace.o(.text)
    __I$use$semihosting                      0x00003d48   ARM Code       0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00003d48   ARM Code       4  use_no_semi.o(.text)
    __aeabi_uidiv                            0x00003d4c   ARM Code       0  aeabi_sdiv.o(.text_udiv)
    __aeabi_uidivmod                         0x00003d4c   ARM Code      28  aeabi_sdiv.o(.text_udiv)
    vPortStartFirstTask                      0x00003d68   ARM Code       0  portasm.o(PORT_ASM)
    vPortYield                               0x00003d98   ARM Code       0  portasm.o(PORT_ASM)
    vPortYieldProcessor                      0x00003da0   ARM Code       0  portasm.o(PORT_ASM)
    vPreemptiveTick                          0x00003e2c   ARM Code       0  portasm.o(PORT_ASM)
    Inline Thumb to ARM Veneer to _fp_init   0x00003ef5   Thumb Code     4  fpinit.o(x$fpl$fpinit)
    _fp_init                                 0x00003ef8   ARM Code      24  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x00003f08   ARM Code       0  fpinit.o(x$fpl$fpinit)
    Region$$Table$$Base                      0x00003f10   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00003f30   Number         0  anon$$obj.o(Region$$Table)
    xSemaphore                               0x40000000   Data           4  main.o(.data)
    xMutex                                   0x40000004   Data           4  main.o(.data)
    Temp                                     0x40000008   Data           1  main.o(.data)
    s                                        0x4000000c   Data           4  main.o(.data)
    pxCurrentTCB                             0x40000010   Data           4  tasks.o(.data)
    ulCriticalNesting                        0x4000004c   Data           4  port.o(.data)
    forks_avail                              0x40000070   Data          20  main.o(.bss)
    __libspace_start                         0x400035b0   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x40003610   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000104

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00003fa0, Max: 0x00080000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x00000000, Size: 0x00003f30, Max: 0x00080000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000104   Code   RO           69    RESET               startup.o
    0x00000104   0x00000008   Code   RO          211  * !!!main             __main.o(c_t.l)
    0x0000010c   0x0000003c   Code   RO          387    !!!scatter          __scatter.o(c_t.l)
    0x00000148   0x00000028   Code   RO          389    !!handler_copy      __scatter_copy.o(c_t.l)
    0x00000170   0x0000002c   Code   RO          391    !!handler_zi        __scatter_zi.o(c_t.l)
    0x0000019c   0x00000008   Ven    RO          255    .ARM.Collect$$libinit$$00000000  libinit.o(c_t.l)
    0x000001a4   0x00000006   Code   RO          255    .ARM.Collect$$libinit$$00000000  libinit.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          269    .ARM.Collect$$libinit$$00000006  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          271    .ARM.Collect$$libinit$$00000008  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          273    .ARM.Collect$$libinit$$0000000A  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          276    .ARM.Collect$$libinit$$0000000D  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          278    .ARM.Collect$$libinit$$0000000F  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          280    .ARM.Collect$$libinit$$00000011  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          282    .ARM.Collect$$libinit$$00000013  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          284    .ARM.Collect$$libinit$$00000015  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          286    .ARM.Collect$$libinit$$00000017  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          288    .ARM.Collect$$libinit$$00000019  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          290    .ARM.Collect$$libinit$$0000001B  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          292    .ARM.Collect$$libinit$$0000001D  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          294    .ARM.Collect$$libinit$$0000001F  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          296    .ARM.Collect$$libinit$$00000021  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          300    .ARM.Collect$$libinit$$00000028  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          302    .ARM.Collect$$libinit$$0000002A  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          304    .ARM.Collect$$libinit$$0000002C  libinit2.o(c_t.l)
    0x000001aa   0x00000000   Code   RO          306    .ARM.Collect$$libinit$$0000002E  libinit2.o(c_t.l)
    0x000001aa   0x0000000c   Code   RO          307    .ARM.Collect$$libinit$$0000002F  libinit2.o(c_t.l)
    0x000001b6   0x00000002   PAD
    0x000001b8   0x00000008   Ven    RO          345    .ARM.Collect$$libshutdown$$00000000  libshutdown.o(c_t.l)
    0x000001c0   0x00000004   Code   RO          345    .ARM.Collect$$libshutdown$$00000000  libshutdown.o(c_t.l)
    0x000001c4   0x00000000   Code   RO          372    .ARM.Collect$$libshutdown$$00000003  libshutdown2.o(c_t.l)
    0x000001c4   0x00000000   Code   RO          375    .ARM.Collect$$libshutdown$$00000006  libshutdown2.o(c_t.l)
    0x000001c4   0x00000000   Code   RO          378    .ARM.Collect$$libshutdown$$00000009  libshutdown2.o(c_t.l)
    0x000001c4   0x00000000   Code   RO          380    .ARM.Collect$$libshutdown$$0000000B  libshutdown2.o(c_t.l)
    0x000001c4   0x00000000   Code   RO          383    .ARM.Collect$$libshutdown$$0000000E  libshutdown2.o(c_t.l)
    0x000001c4   0x00000006   Code   RO          384    .ARM.Collect$$libshutdown$$0000000F  libshutdown2.o(c_t.l)
    0x000001ca   0x00000002   PAD
    0x000001cc   0x00000000   Code   RO          213    .ARM.Collect$$rtentry$$00000000  rtentry.o(c_t.l)
    0x000001cc   0x00000000   Code   RO          222    .ARM.Collect$$rtentry$$00000002  rtentry2.o(c_t.l)
    0x000001cc   0x00000008   Code   RO          237    .ARM.Collect$$rtentry$$00000004  rtentry4.o(c_t.l)
    0x000001d4   0x00000000   Code   RO          224    .ARM.Collect$$rtentry$$00000009  rtentry2.o(c_t.l)
    0x000001d4   0x00000004   Code   RO          225    .ARM.Collect$$rtentry$$0000000A  rtentry2.o(c_t.l)
    0x000001d8   0x00000000   Code   RO          227    .ARM.Collect$$rtentry$$0000000C  rtentry2.o(c_t.l)
    0x000001d8   0x00000028   Code   RO          228    .ARM.Collect$$rtentry$$0000000D  rtentry2.o(c_t.l)
    0x00000200   0x00000004   Ven    RO          259    .ARM.Collect$$rtexit$$00000000  rtexit.o(c_t.l)
    0x00000204   0x00000004   Code   RO          259    .ARM.Collect$$rtexit$$00000000  rtexit.o(c_t.l)
    0x00000208   0x00000000   Code   RO          313    .ARM.Collect$$rtexit$$00000002  rtexit2.o(c_t.l)
    0x00000208   0x00000004   Code   RO          314    .ARM.Collect$$rtexit$$00000003  rtexit2.o(c_t.l)
    0x0000020c   0x00000008   Code   RO          315    .ARM.Collect$$rtexit$$00000004  rtexit2.o(c_t.l)
    0x00000214   0x000006c0   Code   RO            1    .text               main.o
    0x000008d4   0x00000020   Code   RO           70    .text               startup.o
    0x000008f4   0x00001a10   Code   RO           76    .text               tasks.o
    0x00002304   0x00000110   Code   RO          101    .text               list.o
    0x00002414   0x00000b58   Code   RO          113    .text               queue.o
    0x00002f6c   0x000001fc   Code   RO          125    .text               port.o
    0x00003168   0x00000618   Code   RO          143    .text               lcd.o
    0x00003780   0x00000210   Code   RO          172    .text               heap_2.o
    0x00003990   0x00000008   Ven    RO          189    .text               strcpy.o(c_t.l)
    0x00003998   0x00000050   Code   RO          189    .text               strcpy.o(c_t.l)
    0x000039e8   0x000000d4   Code   RO          191    .text               rt_memcpy.o(c_t.l)
    0x00003abc   0x00000180   Code   RO          193    .text               aeabi_sdiv.o(c_t.l)
    0x00003c3c   0x00000006   Code   RO          209    .text               heapauxi.o(c_t.l)
    0x00003c42   0x00000002   PAD
    0x00003c44   0x00000064   Code   RO          219    .text               rt_memcpy_w.o(c_t.l)
    0x00003ca8   0x00000060   Code   RO          241    .text               sys_stackheap_outer.o(c_t.l)
    0x00003d08   0x0000000c   Code   RO          243    .text               exit.o(c_t.l)
    0x00003d14   0x0000000c   Code   RO          256    .text               libspace.o(c_t.l)
    0x00003d20   0x00000018   Code   RO          310    .text               sys_exit.o(c_t.l)
    0x00003d38   0x00000010   Code   RO          323    .text               rt_fp_status_addr_intlibspace.o(c_t.l)
    0x00003d48   0x00000004   Code   RO          335    .text               use_no_semi.o(c_t.l)
    0x00003d4c   0x0000001c   Code   RO          194    .text_udiv          aeabi_sdiv.o(c_t.l)
    0x00003d68   0x0000018c   Code   RO          140    PORT_ASM            portasm.o
    0x00003ef4   0x00000004   Ven    RO          308    x$fpl$fpinit        fpinit.o(fz_ts.l)
    0x00003ef8   0x00000018   Code   RO          308    x$fpl$fpinit        fpinit.o(fz_ts.l)
    0x00003f10   0x00000020   Data   RO          385    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x40000000, Size: 0x00003c30, Max: 0x00008000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x40000000   0x00000010   Data   RW            3    .data               main.o
    0x40000010   0x0000003c   Data   RW           78    .data               tasks.o
    0x4000004c   0x00000004   Data   RW          126    .data               port.o
    0x40000050   0x00000008   Data   RW          144    .data               lcd.o
    0x40000058   0x00000018   Data   RW          174    .data               heap_2.o
    0x40000070   0x00000014   Zero   RW            2    .bss                main.o
    0x40000084   0x0000012c   Zero   RW           77    .bss                tasks.o
    0x400001b0   0x00003400   Zero   RW          173    .bss                heap_2.o
    0x400035b0   0x00000060   Zero   RW          257    .bss                libspace.o(c_t.l)
    0x40003610   0x00000000   Zero   RW           68    HEAP                startup.o
    0x40003610   0x00000620   Zero   RW           67    STACK               startup.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       528         24          0         24      13312       3028   heap_2.o
      1560         16          0          8          0       5047   lcd.o
       272          0          0          0          0       1706   list.o
      1728        356          0         16         20      21192   main.o
       508         36          0          4          0       2703   port.o
       396         24          0          0          0        340   portasm.o
      2904          0          0          0          0      10554   queue.o
       292         60          0          0       1568        464   startup.o
      6672         96          0         60        300      19444   tasks.o

    ----------------------------------------------------------------------
     14860        612         32        112      15200      64478   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         0          0          0          0          0          2   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
        60          8          0          0          0          0   __scatter.o
        40          0          0          0          0          0   __scatter_copy.o
        44          0          0          0          0          0   __scatter_zi.o
       412          0          0          0          0        148   aeabi_sdiv.o
        12          0          0          0          0         60   exit.o
        28          0          0          0          0         80   fpinit.o
         6          0          0          0          0        132   heapauxi.o
        14          0          0          0          0          0   libinit.o
        12          0          0          0          0          0   libinit2.o
        12          0          0          0          0          0   libshutdown.o
         6          0          0          0          0          0   libshutdown2.o
        12          4          0          0         96         68   libspace.o
        16          4          0          0          0         68   rt_fp_status_addr_intlibspace.o
       212          0          0          0          0         68   rt_memcpy.o
       100          0          0          0          0         80   rt_memcpy_w.o
         0          0          0          0          0          0   rtentry.o
        44          4          0          0          0          0   rtentry2.o
         8          0          0          0          0          0   rtentry4.o
         8          0          0          0          0          0   rtexit.o
        12          0          0          0          0          0   rtexit2.o
        88          6          0          0          0         76   strcpy.o
        24          8          0          0          0         68   sys_exit.o
        96          0          0          0          0         80   sys_stackheap_outer.o
         4          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
      1284         34          0          0         96       1064   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1250         34          0          0         96        984   c_t.l
        28          0          0          0          0         80   fz_ts.l

    ----------------------------------------------------------------------
      1284         34          0          0         96       1064   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     16144        646         32        112      15296      64160   Grand Totals
     16144        646         32        112      15296      64160   ELF Image Totals
     16144        646         32        112          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                16176 (  15.80kB)
    Total RW  Size (RW Data + ZI Data)             15408 (  15.05kB)
    Total ROM Size (Code + RO Data + RW Data)      16288 (  15.91kB)

==============================================================================

